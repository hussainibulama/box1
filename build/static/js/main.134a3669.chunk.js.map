{"version":3,"sources":["images/box1-cycle.png","images/box1-vans.png","images/playstore.png","images/apple-store.png","images/interstate.jpg","images/intracity.jpg","images/document.png","images/doordelivery.jpg","images/more-customs.png","images/pos-t.png","images/track.png","images/abuja-map.jpg","images/box-request.svg","UserStore.js","components/header.js","components/slide.js","components/footer.js","components/solution.js","components/home.js","components/dashboard/sidebar/LogoComponent.js","components/dashboard/sidebar/MenuItemComponent.js","components/dashboard/assets/icon-overview.js","components/dashboard/assets/icon-tickets.js","components/dashboard/assets/icon-ideas.js","components/dashboard/assets/icon-contacts.js","components/dashboard/assets/icon-agents.js","components/dashboard/assets/icon-articles.js","components/dashboard/assets/icon-settings.js","components/dashboard/assets/icon-subscription.js","components/dashboard/assets/icon-burger.js","components/dashboard/sidebar/SidebarComponent.js","components/dashboard/assets/icon-bell-new.js","components/dashboard/header/Button.js","components/dashboard/header/HeaderComponent.js","components/dashboard/content/ContentComponent.js","components/dashboard/content/interstatep.js","components/dashboard/content/PrepareShipment.js","components/dashboard/content/interstate.js","components/dashboard/content/ScheduleShipment.js","components/dashboard/content/myshipments.js","components/dashboard/content/settings.js","components/dashboard/content/Subscription.js","components/dashboard/dashboard.js","components/login.js","components/signup.js","components/dashboard/content/utils.js","components/dashboard/content/CreditCard.js","components/main.js","App.js","serviceWorker.js","index.js","images/box11.png","components/dashboard/assets/doc.svg","components/dashboard/assets/parcel.svg","images/interregion.jpeg"],"names":["module","exports","extendObservable","this","loading","isLoggedIn","sessionID","username","name","state","address","Head","className","style","position","justifyContent","textAlign","height","width","alignItems","margin","transparent","title","src","logo","alt","color","left","waterfall","to","raised","marginLeft","Component","Slide","Carousel","Item","slide2","Caption","slide1","Foot","size","type","col","playstore","applestore","Solution","props","nextStep","step","setState","continue","e","preventDefault","prevStep","back","photo2","data-radium","onClick","icon","faArrowCircleRight","faArrowCircleLeft","photo1","photo3","photo4","photo5","photo6","Home","placeholder","loop","Infinity","wrapper","steps","class","abuja","Form","Group","controlId","Label","Control","Row","as","Col","value","defaultValue","borderTop","display","faPencilAlt","fontSize","textDecoration","fontWeight","faArrowRight","float","right","top","faClock","faCalendarAlt","morecustomers","backgroundCoolo","fontFamily","track","pos","background","letterSpacing","fontfamily","fontStyle","lineHeight","styles","StyleSheet","create","container","marginRight","LogoComponent","css","horizontal","vertical","activeBar","backgroundColor","activeContainer","activeTitle","cursor","paddingLeft","paddingRight","MenuItemComponent","active","otherProps","Icon","fill","opacity","faChartPie","faTruck","faHistory","faCreditCard","faBook","faCog","viewBox","xmlns","clipPath","d","id","version","xmlSpace","xmlnsXlink","burgerIcon","paddingTop","containerMobile","transition","zIndex","mainContainer","minHeight","pro2","mainContainerMobile","mainContainerExpanded","minWidth","menuItemList","marginTop","outsideLayer","separator","marginBottom","hide","show","SidebarComponent","onChange","selectedItem","useState","expanded","setExpanded","window","innerWidth","isMobile","setIsMobile","input1","useRef","React","updateState","forceUpdate","useCallback","useEffect","onItemClicked","item","toggleMenu","componentRef","element","current","breakpoints","768","IconOverview","IconTickets","IconIdeas","IconContacts","IconAgents","IconArticles","IconSettings","IconSubscription","cx","cy","r","stroke","strokeWidth","Buttons","fetch","method","headers","Accept","res","json","result","success","UserStore","location","reload","console","log","Button","doesLogout","variant","avatar","borderRadius","border","cursorPointer","borderLeft","iconStyles","HeaderComponent","cardsContainer","cardRow","img","links","miniCardContainer","flexGrow","maxWidth","todayTrends","lastRow","unresolvedTickets","tasks","ContentComponent","Container","sm","request","faPhoneAlt","padding","Interstate","amounts","parseFloat","itemweight","amount","date","time","plocation","dlocation","rname","rphone","itemtype","payment","setTimeout","body","JSON","stringify","sendername","senderphone","from","alert","msg","property","onSubmit","handleform","setInputValue","target","required","disabled","rows","for","Doc","Parcel","faMoneyBillWave","subs","faIdBadge","ScheduleShipment","faSpinner","spin","toggleContent","content","mainBlock","resize","activeTab","removeEventListener","addEventListener","faEdit","tabId","ripple","toggleCategories","Styles","makeStyles","table","MyShipments","results","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","key","scope","darchieved","Settings","rstate","oldpassword","newpassword","cpassword","loader","password","UpdatePersonal","UpdatePassword","Subscription","Dashboard","PrepareShipment","Login","buttonDisabled","trim","length","resetForm","logobox1","handleLogin","pattern","Text","Check","label","doLogin","Signup","handleChange","formErrors","verify","otp","String","Math","floor","random","handleSubmit","ClassName","createAccount","handleVerify","code","verifyAccount","clearNumber","replace","CreditCard","handleCallback","isValid","issuer","handleInputFocus","focused","handleInputChange","nextValue","Payment","fns","cardType","clearValue","slice","formatCreditCardNumber","formatExpirationDate","prevValue","allValues","maxLength","number","formatCVC","formData","elements","filter","reduce","acc","form","reset","expiry","cvc","sessinID","cvv","data","callback","ref","c","onFocus","Object","keys","i","Main","exact","path","App","observer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.134a3669.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/box1-cycle.636cfbc5.png\";","module.exports = __webpack_public_path__ + \"static/media/box1-vans.bf2b81aa.png\";","module.exports = __webpack_public_path__ + \"static/media/playstore.5b976faa.png\";","module.exports = __webpack_public_path__ + \"static/media/apple-store.5169b377.png\";","module.exports = __webpack_public_path__ + \"static/media/interstate.6e43ccc4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/intracity.8eefb7d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/document.befed9f4.png\";","module.exports = __webpack_public_path__ + \"static/media/doordelivery.d5b58496.jpg\";","module.exports = __webpack_public_path__ + \"static/media/more-customs.3e4c6a07.png\";","module.exports = __webpack_public_path__ + \"static/media/pos-t.883629e3.png\";","module.exports = __webpack_public_path__ + \"static/media/track.06b03000.png\";","module.exports = __webpack_public_path__ + \"static/media/abuja-map.2d9a9885.jpg\";","module.exports = __webpack_public_path__ + \"static/media/box-request.0557bfdb.svg\";","import { extendObservable } from \"mobx\";\n\n/**\n * Userstore\n */\nclass UserStore {\n  constructor() {\n    extendObservable(this, {\n      loading: true,\n      isLoggedIn: false,\n      sessionID: \"\",\n      username: \"\",\n      name: \"\",\n      state: \"\",\n      address: \"\",\n    });\n  }\n}\nexport default new UserStore();\n","import React, { Component } from \"react\";\nimport { Layout, Header, Drawer, Navigation, Content, Button } from \"react-mdl\";\nimport logo from \"../images/box11.png\";\nimport { Link } from \"react-router-dom\";\n\nclass Head extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"Desktop\">\n          <div className=\"wrap\">\n            <div className=\"header\" style={{}}>\n              <div\n                style={{\n                  position: \"relative\",\n                  justifyContent: \"center\",\n                  textAlign: \"center\",\n                  height: \"80px\",\n                  width: \"100%\",\n                }}\n              >\n                <Layout\n                  className=\"layout\"\n                  style={{\n                    position: \"relative\",\n                    justifyContent: \"center\",\n                    textAlign: \"center\",\n                    alignItems: \"center\",\n                    width: \"1240px\",\n                    margin: \"0 auto\",\n                  }}\n                >\n                  <Header\n                    transparent\n                    title={<img className=\"logo\" src={logo} alt=\"Box1 logo\" />}\n                    style={{\n                      color: \"white\",\n                      left: \"0\",\n                    }}\n                    waterfall\n                  >\n                    <Navigation>\n                      <div className=\"top-nav\">\n                        <li>\n                          <Link className=\"link\" to=\"/\">\n                            Track\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/about\">\n                            Ship\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/program\">\n                            Services\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/gallery\">\n                            Faq\n                          </Link>\n                        </li>\n\n                        <li>\n                          <Link className=\"link\" to=\"/login\">\n                            Login\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"links\" to=\"/signup\">\n                            <Button className=\"button\" raised>\n                              Create Account\n                            </Button>\n                          </Link>\n                        </li>\n                      </div>\n                    </Navigation>\n                  </Header>\n\n                  <Drawer\n                    title={\n                      <img\n                        className=\"logo\"\n                        src={logo}\n                        alt=\"Box1 logo\"\n                        style={{\n                          marginLeft: \"0\",\n                          left: \"0\",\n                          textAlign: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      />\n                    }\n                    style={{}}\n                  >\n                    <Navigation>\n                      <div className=\"top-navs\">\n                        <li>\n                          <Link className=\"link\" to=\"/\">\n                            Track\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/about\">\n                            Ship\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/program\">\n                            Services\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"link\" to=\"/gallery\">\n                            Faq\n                          </Link>\n                        </li>\n\n                        <li>\n                          <Link className=\"link\" to=\"/login\">\n                            Login\n                          </Link>\n                        </li>\n                        <li>\n                          <Link className=\"links\" to=\"/signup\">\n                            <Button className=\"button\" raised>\n                              Create Account\n                            </Button>\n                          </Link>\n                        </li>\n                      </div>\n                    </Navigation>\n                  </Drawer>\n\n                  <Content />\n                </Layout>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"Mobile\"></div>\n      </>\n    );\n  }\n}\nexport default Head;\n","import React, { Component } from \"react\";\nimport { Carousel } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"react-mdl\";\nimport slide1 from \"../images/box1-cycle.png\";\nimport slide2 from \"../images/box1-vans.png\";\n\nclass Slide extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"slide\">\n          <Carousel>\n            <Carousel.Item>\n              <img className=\"d-block w-50\" src={slide2} alt=\"First slide\" />\n              <Carousel.Caption>\n                <div className=\"proevo\">\n                  <h3>\n                    The first with an end-to-end delivery for small and large\n                    businesses.\n                  </h3>\n                  <p>Request or Schedule a pickup at your comfort zone.</p>\n                  <Link className=\"links\" to=\"/signup\">\n                    <Button className=\"button\" raised>\n                      Create Account\n                    </Button>\n                  </Link>\n                </div>\n              </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-50\"\n                src={slide1}\n                style={{ position: \"relative\", height: \"90%\" }}\n                alt=\"First slide\"\n              />\n              <Carousel.Caption>\n                <div className=\"proevo\">\n                  <h3>\n                    The first with an end-to-end delivery for small and large\n                    businesses.\n                  </h3>\n                  <p>Request or Schedule a pickup at your comfort zone.</p>\n                  <Link className=\"links\" to=\"/signup\">\n                    <Button className=\"button\" raised>\n                      Create Account\n                    </Button>\n                  </Link>\n                </div>\n              </Carousel.Caption>\n            </Carousel.Item>\n          </Carousel>\n        </div>\n      </>\n    );\n  }\n}\nexport default Slide;\n","import React, { Component } from \"react\";\nimport { Footer, FooterSection, Grid, Cell } from \"react-mdl\";\nimport logo from \"../images/box11.png\";\nimport playstore from \"../images/playstore.png\";\nimport applestore from \"../images/apple-store.png\";\n\nclass Foot extends Component {\n  render() {\n    return (\n      <div className=\"footer\" style={{ textAlign: \"left !important\" }}>\n        <Footer size=\"mega\">\n          <br></br>\n          <br></br>\n\n          <hr />\n          <FooterSection type=\"middle\" className=\"foot\">\n            <img\n              className=\"logo\"\n              src={logo}\n              alt=\"logo\"\n              style={{ left: \"15px\" }}\n            />\n\n            <Grid className=\"demo-grid-ruler\">\n              <Cell col={3}>\n                <p>\n                  Box1 Deisgned and Operates the Website and app. it is a\n                  trading name of Box1 Delivery Limited.\n                  <br /> &copy; Box1 2020. All Rights Reserved.\n                </p>\n                <p>About | Careers | Blog | Terms | Privacy & Policy</p>\n                <h2>HEAD QUARTER</h2>\n                <p>\n                  Box 1, Inc. No. 36 Benue Crescent, Garki Area 1 Abuja, Nigeria\n                </p>\n              </Cell>\n\n              <Cell col={3}>\n                <h2 className=\"ridle\">CONNECT WITH US</h2>\n                <p className=\"ridles\">\n                  Email:info@box1.ng\n                  <br />\n                  Phone:+234 907 344 4413\n                </p>\n              </Cell>\n\n              <Cell col={3}>\n                <h2>PARTNER WITH US</h2>\n                <p>\n                  Help Center\n                  <br />\n                  Partner with us\n                </p>\n              </Cell>\n\n              <Cell col={3}>\n                <h2>AVAILABLE ON</h2>\n                <img className=\"foots\" src={playstore} alt=\"Play Store\" />\n                <br />\n                <img className=\"foots\" src={applestore} alt=\"Apple Store\" />\n              </Cell>\n            </Grid>\n          </FooterSection>\n          <br />\n          <br />\n        </Footer>\n      </div>\n    );\n  }\n}\nexport default Foot;\n","import React, { Component } from \"react\";\nimport photo1 from \"../images/interstate.jpg\";\nimport photo2 from \"../images/intracity.jpg\";\nimport photo3 from \"../images/interregion.jpeg\";\nimport photo4 from \"../images/document.png\";\nimport photo5 from \"../images/doordelivery.jpg\";\nimport photo6 from \"../images/interregion.jpeg\";\nimport {\n  faArrowCircleLeft,\n  faArrowCircleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Grid, Cell } from \"react-mdl\";\n\nclass Solution extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n    };\n  }\n  nextStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step + 1,\n    });\n  };\n  continue = (e) => {\n    e.preventDefault();\n    this.nextStep();\n  };\n  //Go Back\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.prevStep();\n  };\n  render() {\n    const { step } = this.state;\n    switch (step) {\n      case 1:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <img src={photo2} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Intra-City Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"rights\">\n                    <button onClick={this.continue} className=\"ar-right\">\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowCircleRight}\n                      />\n                    </button>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <div className=\"lefts\">\n                      <button onClick={this.back} className=\"ar-left\">\n                        <FontAwesomeIcon\n                          onClick={this.back}\n                          icon={faArrowCircleLeft}\n                        />\n                      </button>\n                    </div>\n                    <img src={photo1} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Inter-State Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"rights\">\n                    <button onClick={this.continue} className=\"ar-right\">\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowCircleRight}\n                      />\n                    </button>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <div className=\"lefts\">\n                      <button onClick={this.back} className=\"ar-left\">\n                        <FontAwesomeIcon\n                          onClick={this.back}\n                          icon={faArrowCircleLeft}\n                        />\n                      </button>\n                    </div>\n                    <img src={photo3} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Inter-Region Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"rights\">\n                    <button onClick={this.continue} className=\"ar-right\">\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowCircleRight}\n                      />\n                    </button>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n      case 4:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <div className=\"lefts\">\n                      <button onClick={this.back} className=\"ar-left\">\n                        <FontAwesomeIcon\n                          onClick={this.back}\n                          icon={faArrowCircleLeft}\n                        />\n                      </button>\n                    </div>\n                    <img src={photo4} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Safe Document Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"rights\">\n                    <button onClick={this.continue} className=\"ar-right\">\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowCircleRight}\n                      />\n                    </button>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n      case 5:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <div className=\"lefts\">\n                      <button onClick={this.back} className=\"ar-left\">\n                        <FontAwesomeIcon\n                          onClick={this.back}\n                          icon={faArrowCircleLeft}\n                        />\n                      </button>\n                    </div>\n                    <img src={photo5} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Door to Door Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                  <div className=\"rights\">\n                    <button onClick={this.continue} className=\"ar-right\">\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowCircleRight}\n                      />\n                    </button>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n      case 6:\n        return (\n          <>\n            <div style={{ width: \"80%\", margin: \"auto\" }}>\n              <Grid className=\"demo-grid-ruler\">\n                <Cell col={6}>\n                  <div className=\"photo-left\">\n                    <div className=\"lefts\">\n                      <button onClick={this.back} className=\"ar-left\">\n                        <FontAwesomeIcon\n                          onClick={this.back}\n                          icon={faArrowCircleLeft}\n                        />\n                      </button>\n                    </div>\n                    <img src={photo6} alt=\"solutions\" data-radium=\"true\" />\n                  </div>\n                </Cell>\n                <Cell col={6}>\n                  <div className=\"content-right\">\n                    <h4>Our Solutions.</h4>\n                    <h5>Inter-Regional Delivery</h5>\n                    <p>\n                      A superior express delivery service built for small\n                      businesses across the country.{\" \"}\n                    </p>\n                  </div>\n                </Cell>\n              </Grid>\n            </div>\n          </>\n        );\n\n      default:\n        return <h1>Please Refresh your page</h1>;\n    }\n  }\n}\nexport default Solution;\n","import React, { Component } from \"react\";\nimport Head from \"./header\";\nimport Slide from \"./slide\";\nimport Footer from \"./footer\";\nimport Solution from \"./solution\";\nimport { Link } from \"react-router-dom\";\nimport Typical from \"react-typical\";\nimport { Form, Col } from \"react-bootstrap\";\nimport { Grid, Cell, Button } from \"react-mdl\";\nimport morecustomers from \"../images/more-customs.png\";\nimport pos from \"../images/pos-t.png\";\nimport track from \"../images/track.png\";\nimport abuja from \"../images/abuja-map.jpg\";\nimport {\n  faPencilAlt,\n  faClock,\n  faCalendarAlt,\n  faArrowRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <Head />\n          <Slide />\n          <div className=\"some-features\">\n            <div className=\"text-center\">\n              <div className=\"track-input\">\n                <form className=\"bg-col\">\n                  <input\n                    type=\"text\"\n                    name=\"tracking\"\n                    className=\"input-track\"\n                    placeholder=\"Enter your tracking id or phone number\"\n                  />\n                  <button className=\"button-track\" type=\"submit\" name=\"submit\">\n                    Track\n                  </button>\n                </form>\n              </div>\n              <h3>\n                A modern delivery service that enables small businesses across\n                the country to thrive.\n              </h3>\n              <span className=\"text\">\n                <p>\n                  Built for\n                  <Typical\n                    loop={Infinity}\n                    wrapper=\"b\"\n                    steps={[\n                      \"small business, courier companies and express delivery services\",\n                      1000,\n                      \"medium and large business, courier companies and express delivery services\",\n                      1000,\n                    ]}\n                  />\n                </p>\n              </span>\n            </div>\n            <div className=\"our-solutions\">\n              <div className=\"pattern\">\n                <Solution />\n              </div>\n            </div>\n          </div>\n          <div className=\"other-contents\">\n            <Grid className=\"demo-grid-ruler\">\n              <Cell col={4}>\n                <div className=\"box-left\">\n                  <span class=\"red\"></span>\n                  <h2 class=\"reder\">\n                    Find Box1 in\n                    <em> Nigeria</em>\n                  </h2>\n                  <img className=\"reder\" src={abuja} alt=\"abuja\" />\n\n                  <Button className=\"button\" raised>\n                    Find Nearest Location\n                  </Button>\n                </div>\n              </Cell>\n              <Cell col={4}>\n                <div className=\"box-left\">\n                  <span className=\"red\"></span>\n                  <h2 className=\"reder\">Get A Quik Shipping Rate</h2>\n                  <p className=\"reder\">\n                    Competitive shipping rates designed for your needs\n                  </p>\n                  <Form>\n                    <Form.Group controlId=\"formGridAddress1\">\n                      <Form.Label>\n                        From<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control placeholder=\"Start Typing Your State\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formGridAddress2\">\n                      <Form.Label>\n                        To<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control placeholder=\"Start Typing Your State\" />\n                    </Form.Group>\n\n                    <Form.Row>\n                      <Form.Group as={Col} controlId=\"formGridCity\">\n                        <Form.Label>\n                          Weight<span style={{ color: \"red\" }}>*</span>\n                        </Form.Label>\n                        <Form.Control value=\"0.5\" />\n                      </Form.Group>\n\n                      <Form.Group as={Col} controlId=\"formGridState\">\n                        <Form.Label>\n                          Unit<span style={{ color: \"red\" }}>*</span>\n                        </Form.Label>\n                        <Form.Control as=\"select\" defaultValue=\"Choose...\">\n                          <option>Kg</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form.Row>\n\n                    <Button className=\"button\" raised>\n                      Check rates\n                    </Button>\n                  </Form>\n                </div>\n              </Cell>\n              <Cell col={4}>\n                <div className=\"box-left\">\n                  <span class=\"red\"></span>\n                  <h2 className=\"reder\">Manage Shipments</h2>\n                  <p className=\"reder\">\n                    Login to manage all your shipments easily.\n                  </p>\n\n                  <div\n                    className=\"inline\"\n                    style={{ borderTop: \"1px solid #ccc\" }}\n                  >\n                    <span style={{ display: \"inline-block\" }}>\n                      {\" \"}\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faPencilAlt}\n                        style={{\n                          display: \"inline-block\",\n                          color: \"#800000\",\n                          fontSize: \"20px\",\n                        }}\n                      />\n                    </span>\n                    <p style={{ display: \"inline-block\" }}>\n                      <Link\n                        style={{\n                          color: \"#800000\",\n                          textDecoration: \"none\",\n                          fontWeight: \"900\",\n                        }}\n                        className=\"links\"\n                        to=\"/login\"\n                      >\n                        Prepare Shipment\n                      </Link>\n                    </p>\n                    <span>\n                      {\" \"}\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowRight}\n                        style={{\n                          position: \"relative\",\n                          display: \"inline-block\",\n                          float: \"right\",\n                          right: \"3em\",\n                          top: \"0.5em\",\n                        }}\n                      />\n                    </span>\n                  </div>\n                  <div className=\"inline\">\n                    <span>\n                      {\" \"}\n                      <span style={{ display: \"inline-block\" }}>\n                        {\" \"}\n                        <FontAwesomeIcon\n                          onClick={this.continue}\n                          icon={faClock}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"20px\",\n                          }}\n                        />\n                      </span>\n                    </span>\n                    <p style={{ display: \"inline-block\" }}>\n                      <Link\n                        style={{\n                          color: \"#800000\",\n                          textDecoration: \"none\",\n                          fontWeight: \"900\",\n                        }}\n                        className=\"links\"\n                        to=\"/login\"\n                      >\n                        Recent Shipment\n                      </Link>\n                    </p>\n                    <span>\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowRight}\n                        style={{\n                          position: \"relative\",\n                          display: \"inline-block\",\n                          float: \"right\",\n                          right: \"3em\",\n                          top: \"0.5em\",\n                        }}\n                      />\n                    </span>\n                  </div>\n                  <div className=\"inline\">\n                    <span style={{ display: \"inline-block\" }}>\n                      {\" \"}\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faCalendarAlt}\n                        style={{\n                          display: \"inline-block\",\n                          color: \"#800000\",\n                          fontSize: \"20px\",\n                        }}\n                      />\n                    </span>\n                    <p style={{ display: \"inline-block\" }}>\n                      <Link\n                        className=\"links\"\n                        style={{\n                          color: \"#800000\",\n                          textDecoration: \"none\",\n                          fontWeight: \"900\",\n                        }}\n                        to=\"/login\"\n                      >\n                        Schedule Pickup\n                      </Link>\n                    </p>\n                    <span>\n                      <FontAwesomeIcon\n                        onClick={this.continue}\n                        icon={faArrowRight}\n                        style={{\n                          position: \"relative\",\n                          display: \"inline-block\",\n                          float: \"right\",\n                          right: \"3em\",\n                          top: \"0.5em\",\n                        }}\n                      />\n                    </span>\n                  </div>\n                  <Link className=\"links\" to=\"/signup\">\n                    <Button className=\"button\" raised>\n                      Login\n                    </Button>\n                  </Link>\n                </div>\n              </Cell>\n            </Grid>\n          </div>\n          <div class=\"partners-side\">\n            <Grid className=\"demo-grid-ruler\">\n              <Cell col={6}>\n                <div>\n                  <img src={morecustomers} alt=\"more customers\" />\n                </div>\n              </Cell>\n              <Cell col={6}>\n                <h3\n                  className=\"reckon\"\n                  style={{ textAlign: \"left\", position: \"relative\" }}\n                >\n                  Want to have more customers as a delivery company?\n                </h3>\n                <p\n                  className=\"reckon\"\n                  style={{ textAlign: \"left\", position: \"relative\" }}\n                >\n                  Partner with us by clicking the button below.\n                </p>\n                <p\n                  className=\"reckon\"\n                  style={{ textAlign: \"left\", position: \"relative\" }}\n                >\n                  Built for personal, small, medium and large enterprises.\n                  Courier comapnies are also included.\n                </p>\n                <div\n                  className=\"proevo\"\n                  style={{ left: \"0\", top: \"1em\", backgroundCoolo: \"#0000\" }}\n                >\n                  <Button className=\"button\" raised>\n                    Become a Partner\n                  </Button>\n                </div>\n              </Cell>\n            </Grid>\n          </div>\n          <div className=\"tracking\">\n            <Grid className=\"demo-grid-ruler\">\n              <Cell col={6}>\n                <div class=\"track-some-data\">\n                  <h4\n                    style={{\n                      color: \"#800000\",\n                      fontFamily: \"Nunito, sans-serif\",\n                    }}\n                  >\n                    Track Shipments\n                  </h4>\n                  <h4\n                    style={{\n                      color: \"#000000\",\n                      fontFamily: \"Nunito, sans-serif\",\n                    }}\n                  >\n                    Features of your Account Activity\n                  </h4>\n                  <p\n                    style={{\n                      color: \"#000000\",\n                      fontFamily: \"Nunito, sans-serif\",\n                    }}\n                  >\n                    Track your shipments in realtime, get an overview of the\n                    transition. Get account statements whenever you like on the\n                    mobile app or dashboard\n                  </p>\n                </div>\n              </Cell>\n              <Cell col={6}>\n                <div className=\"tracks\">\n                  <img src={track} alt=\"track\" />\n                </div>\n              </Cell>\n            </Grid>\n          </div>\n          <div className=\"pos\">\n            <Grid className=\"demo-grid-ruler\">\n              <Cell col={6}>\n                <img src={pos} alt=\"pos\" />\n              </Cell>\n              <Cell col={6}>\n                <div className=\"poos\">\n                  <h3>We Accept payments in:</h3>\n                  <h6>POS</h6>\n                  <p>\n                    The point of sale (POS) or point of purchase (POP) is the\n                    time and place where a retail transaction is completed.\n                  </p>\n                  <h6>E-Payment</h6>\n                  <p>\n                    E-payment system is a way of making transactions without the\n                    use of check or cash.\n                  </p>\n                  <h6>Bank Transfer or Cash</h6>\n                  <p>\n                    A bank transfer is when money is sent from one bank account\n                    to another.\n                  </p>\n                </div>\n              </Cell>\n            </Grid>\n          </div>\n          <div class=\"partners-side\">\n            <div className=\"ready\">\n              <h2>\n                Box1 is here to change the way people, organisations,\n                government, small, medium and large enterprises think about\n                delivery and courier services.{\" \"}\n              </h2>\n              <h2>Ready to start?</h2>\n              <div\n                className=\"proev\"\n                style={{\n                  position: \"relative\",\n                  textAlign: \"center !important\",\n                  justifyContent: \"center !important\",\n                  float: \"center !important\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Link className=\"links\" to=\"/signup\">\n                  <Button\n                    className=\"button\"\n                    raised\n                    style={{\n                      background: \"#800000\",\n                      color: \"#fff\",\n\n                      letterSpacing: \"1.25px\",\n                      fontfamily: \" Helvetica Bold\",\n                      fontStyle: \"normal\",\n                      fontWeight: \"900\",\n                      fontSize: \"1em\",\n                      lineHeight: \"110.19%\",\n                    }}\n                  >\n                    Create Account\n                  </Button>\n                </Link>\n                <br></br>\n                <br></br>\n                <br></br>\n              </div>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      </>\n    );\n  }\n}\nexport default Home;\n","import React from \"react\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport logo from \"../../../images/box11.png\";\n\nconst styles = StyleSheet.create({\n  container: {\n    marginLeft: 32,\n    marginRight: 32,\n  },\n  title: {\n    fontFamily: \"Muli\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 19,\n    lineHeight: \"24px\",\n    letterSpacing: \"0.4px\",\n    color: \"#A4A6B3\",\n\n    marginLeft: 12,\n  },\n});\n\nfunction LogoComponent() {\n  return (\n    <Row\n      className={css(styles.container)}\n      horizontal=\"center\"\n      vertical=\"center\"\n    >\n      <span className={css(styles.title)}>\n        <img\n          className=\"log\"\n          src={logo}\n          alt=\"Box1 logo\"\n          style={{ position: \"relative\", left: \"-3em !important\" }}\n        />\n      </span>\n    </Row>\n  );\n}\n\nexport default LogoComponent;\n","import React from \"react\";\nimport { bool, func, string } from \"prop-types\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\n\nconst styles = StyleSheet.create({\n  activeBar: {\n    height: 56,\n    width: 3,\n    backgroundColor: \"#DDE2FF\",\n    position: \"absolute\",\n    left: 0,\n  },\n  activeContainer: {\n    backgroundColor: \"rgba(221,226,255, 0.08)\",\n  },\n  activeTitle: {\n    color: \"#b30000\",\n    fontWeight: 600,\n  },\n  container: {\n    height: 56,\n    cursor: \"pointer\",\n    \":hover\": {\n      backgroundColor: \"#eee\",\n    },\n    paddingLeft: 32,\n    paddingRight: 32,\n  },\n  title: {\n    fontFamily: \"Nunito, sans-serif\",\n    fontSize: 16,\n    lineHeight: \"20px\",\n    letterSpacing: \"0.2px\",\n    color: \"#00000\",\n    marginLeft: 24,\n    fontWeight: 400,\n  },\n});\n\nfunction MenuItemComponent(props) {\n  const { active, icon, title, ...otherProps } = props;\n  const Icon = icon;\n  return (\n    <Row\n      className={css(styles.container, active && styles.activeContainer)}\n      vertical=\"center\"\n      {...otherProps}\n    >\n      {active && <div className={css(styles.activeBar)}></div>}\n      <Icon fill={active && \"#DDE2FF\"} opacity={!active && \"0.4\"} />\n      <span className={css(styles.title, active && styles.activeTitle)}>\n        {title}\n      </span>\n    </Row>\n  );\n}\n\nMenuItemComponent.propTypes = {\n  active: bool,\n  icon: func,\n  title: string,\n};\n\nexport default MenuItemComponent;\n","import React from \"react\";\nimport { faChartPie } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faChartPie}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\n\nimport { faTruck } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faTruck}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\nimport { faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faClock}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faHistory}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\nimport { faCreditCard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faCreditCard}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\nimport { faBook } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faBook}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\nimport { faCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default (props) => (\n  <FontAwesomeIcon\n    icon={faCog}\n    style={{\n      display: \"inline-block\",\n      color: \"#800000\",\n      fontSize: \"15px\",\n    }}\n  />\n);\n","import React from \"react\";\n\nexport default (props) => (\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"#800000\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0)\">\n      <path\n        d=\"M5.035 11.3322C4.76344 11.0606 4.905 11.1372 4.25 10.9619C3.95281 10.8822 3.69156 10.7291 3.45531 10.5456L2.0375 14.0219C1.90031 14.3584 2.15656 14.7241 2.51969 14.7103L4.16625 14.6475L5.29875 15.8437C5.54875 16.1075 5.9875 16.0253 6.12469 15.6887L7.75125 11.7006C7.4125 11.8894 7.03656 12 6.64781 12C6.03844 12 5.46594 11.7628 5.035 11.3322ZM13.9625 14.0219L12.5447 10.5456C12.3084 10.7294 12.0472 10.8822 11.75 10.9619C11.0916 11.1381 11.2359 11.0612 10.965 11.3322C10.5341 11.7628 9.96125 12 9.35188 12C8.96313 12 8.58719 11.8891 8.24844 11.7006L9.875 15.6887C10.0122 16.0253 10.4513 16.1075 10.7009 15.8437L11.8338 14.6475L13.4803 14.7103C13.8434 14.7241 14.0997 14.3581 13.9625 14.0219ZM10.2188 10.625C10.6963 10.1391 10.7509 10.1809 11.4309 9.99562C11.865 9.87718 12.2044 9.53187 12.3206 9.08999C12.5544 8.20249 12.4938 8.30968 13.1316 7.66031C13.4494 7.33687 13.5734 6.8653 13.4572 6.42343C13.2238 5.53655 13.2234 5.66031 13.4572 4.77249C13.5734 4.33062 13.4494 3.85906 13.1316 3.53562C12.4938 2.88624 12.5544 2.99312 12.3206 2.10593C12.2044 1.66406 11.865 1.31874 11.4309 1.20031C10.5597 0.962493 10.6647 1.02468 10.0263 0.374993C9.70844 0.0515551 9.245 -0.0750074 8.81094 0.0434301C7.94 0.28093 8.06156 0.281243 7.18906 0.0434301C6.755 -0.0750074 6.29156 0.0512426 5.97375 0.374993C5.33594 1.02437 5.44094 0.962493 4.56938 1.20031C4.13531 1.31874 3.79594 1.66406 3.67969 2.10593C3.44625 2.99312 3.50656 2.88624 2.86875 3.53562C2.55094 3.85906 2.42656 4.33062 2.54313 4.77249C2.77656 5.65874 2.77688 5.53499 2.54313 6.42312C2.42688 6.86499 2.55094 7.33656 2.86875 7.66031C3.50656 8.30968 3.44594 8.20249 3.67969 9.08999C3.79594 9.53187 4.13531 9.87718 4.56938 9.99562C5.26875 10.1862 5.32094 10.1562 5.78125 10.625C6.19469 11.0459 6.83875 11.1212 7.33563 10.8069C7.53432 10.6807 7.76481 10.6137 8.00016 10.6137C8.23551 10.6137 8.466 10.6807 8.66469 10.8069C9.16125 11.1212 9.80531 11.0459 10.2188 10.625ZM5.05188 5.49874C5.05188 3.84156 6.37188 2.49812 8 2.49812C9.62813 2.49812 10.9481 3.84156 10.9481 5.49874C10.9481 7.15593 9.62813 8.49937 8 8.49937C6.37188 8.49937 5.05188 7.15593 5.05188 5.49874Z\"\n        fill={props.fill || \"#800000\"}\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"16\" height=\"16\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg height=\"32px\" version=\"1.1\" viewBox=\"0 0 32 32\" width=\"32px\"\n        xmlSpace=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\">\n            <path d=\"M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z\"/>\n    </svg>\n);\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport LogoComponent from \"./LogoComponent\";\nimport MenuItemComponent from \"./MenuItemComponent\";\nimport IconOverview from \"../assets/icon-overview.js\";\nimport IconTickets from \"../assets/icon-tickets.js\";\nimport IconIdeas from \"../assets/icon-ideas.js\";\nimport IconContacts from \"../assets/icon-contacts\";\nimport IconAgents from \"../assets/icon-agents\";\nimport IconArticles from \"../assets/icon-articles\";\nimport IconSettings from \"../assets/icon-settings\";\nimport IconSubscription from \"../assets/icon-subscription\";\nimport IconBurger from \"../assets/icon-burger\";\n\nconst styles = StyleSheet.create({\n  burgerIcon: {\n    cursor: \"pointer\",\n    position: \"absolute\",\n    left: 24,\n    top: 34,\n  },\n  container: {\n    backgroundColor: \"#fff\",\n\n    width: 255,\n    paddingTop: 32,\n    height: \"calc(100% - 32px)\",\n  },\n  containerMobile: {\n    transition: \"left 0.5s, right 0.5s\",\n    position: \"absolute\",\n    width: 255,\n    height: \"calc(100% - 32px)\",\n    zIndex: 901,\n  },\n  mainContainer: {\n    height: \"100%\",\n    minHeight: \"100vh\",\n  },\n  pro2: {\n    color: \"#000000\",\n    textDecoration: \"none\",\n\n    \"&&active\": {\n      color: \"#800000\",\n    },\n    \"&&hover\": {\n      color: \"#800000\",\n    },\n  },\n  mainContainerMobile: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n  },\n  mainContainerExpanded: {\n    width: \"100%\",\n    minWidth: \"100vh\",\n  },\n  menuItemList: {\n    marginTop: 52,\n  },\n  outsideLayer: {\n    position: \"absolute\",\n    width: \"100vw\",\n    minWidth: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"rgba(0,0,0,.50)\",\n    zIndex: 900,\n  },\n  separator: {\n    borderTop: \"1px solid #DFE0EB\",\n    marginTop: 16,\n    marginBottom: 16,\n    opacity: 0.06,\n  },\n  hide: {\n    left: -255,\n  },\n  show: {\n    left: 0,\n  },\n});\n\nfunction SidebarComponent({ onChange, selectedItem }) {\n  const [expanded, setExpanded] = useState(false);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const input1 = useRef(null);\n\n  const [, updateState] = React.useState();\n  const forceUpdate = useCallback(() => updateState({}), []);\n\n  /**\n   * This is to fix this issue:\n   * https://github.com/llorentegerman/react-admin-dashboard/issues/8\n   * I haven't been able to reproduce this bug in Safari 13.0.5 (14608.5.12)\n   */\n  useEffect(() => {\n    setIsMobile(window.innerWidth <= 768);\n    forceUpdate();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [window.innerWidth]);\n\n  const onItemClicked = (item) => {\n    setExpanded(false);\n    return onChange(item);\n  };\n\n  const toggleMenu = () => setExpanded(!expanded);\n\n  const renderBurger = () => {\n    return (\n      <div onClick={toggleMenu} className={css(styles.burgerIcon)}>\n        <IconBurger />\n      </div>\n    );\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <Row\n        componentRef={(element) => (input1.current = element)}\n        className={css(styles.mainContainer)}\n        breakpoints={{\n          768: css(\n            styles.mainContainerMobile,\n            expanded && styles.mainContainerExpanded\n          ),\n        }}\n      >\n        {isMobile && !expanded && renderBurger()}\n        <Column\n          className={css(styles.container)}\n          breakpoints={{\n            768: css(\n              styles.containerMobile,\n              expanded ? styles.show : styles.hide\n            ),\n          }}\n        >\n          <LogoComponent />\n          <Column className={css(styles.menuItemList)}>\n            <Link className={css(styles.pro2)} to=\"/dashboard\">\n              <MenuItemComponent\n                title=\"Overview\"\n                icon={IconOverview}\n                onClick={() => onItemClicked(\"Overview\")}\n                active={selectedItem === \"Overview\"}\n              />\n            </Link>\n\n            <Link className={css(styles.pro2)} to=\"/dashboard/prepareshipment\">\n              <MenuItemComponent\n                title=\"Prepare Shipment\"\n                icon={IconTickets}\n                onClick={() => onItemClicked(\"Shipment\")}\n                active={selectedItem === \"Shipment\"}\n              />\n            </Link>\n            <Link className={css(styles.pro2)} to=\"/dashboard/scheduleshipment\">\n              <MenuItemComponent\n                title=\"Schedule Pickup\"\n                icon={IconIdeas}\n                onClick={() => onItemClicked(\"Pickup\")}\n                active={selectedItem === \"Pickup\"}\n              />\n            </Link>\n            <Link className={css(styles.pro2)} to=\"/dashboard/myshipments\">\n              <MenuItemComponent\n                title=\"My Shipments\"\n                icon={IconContacts}\n                onClick={() => onItemClicked(\"Myshipments\")}\n                active={selectedItem === \"Myshipments\"}\n              />\n            </Link>\n            <Link className={css(styles.pro2)} to=\"/dashboard/creditcard\">\n              <MenuItemComponent\n                title=\"Card Management\"\n                icon={IconAgents}\n                onClick={() => onItemClicked(\"Card\")}\n                active={selectedItem === \"Card\"}\n              />\n            </Link>\n            <MenuItemComponent\n              title=\"Support Requests\"\n              icon={IconArticles}\n              onClick={() => onItemClicked(\"Articles\")}\n              active={selectedItem === \"Articles\"}\n            />\n            <div className={css(styles.separator)}></div>\n            <Link className={css(styles.pro2)} to=\"/dashboard/settings\">\n              <MenuItemComponent\n                title=\"Settings\"\n                icon={IconSettings}\n                onClick={() => onItemClicked(\"Settings\")}\n                active={selectedItem === \"Settings\"}\n              />\n            </Link>\n            <Link className={css(styles.pro2)} to=\"/dashboard/subscription\">\n              <MenuItemComponent\n                title=\"Subscription\"\n                icon={IconSubscription}\n                onClick={() => onItemClicked(\"Subscription\")}\n                active={selectedItem === \"Subscription\"}\n              />\n            </Link>\n          </Column>\n        </Column>\n        {isMobile && expanded && (\n          <div className={css(styles.outsideLayer)} onClick={toggleMenu}></div>\n        )}\n      </Row>\n    </div>\n  );\n}\n\nexport default SidebarComponent;\n","import React from \"react\";\n\nexport default (props) => (\n  <svg\n    width=\"18\"\n    height=\"19\"\n    viewBox=\"0 0 18 19\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M7.99999 19C9.10374 19 9.99905 18.1047 9.99905 17H6.00093C6.00093 18.1047 6.89624 19 7.99999 19ZM14.7309 14.3216C14.1272 13.6728 12.9975 12.6969 12.9975 9.5C12.9975 7.07188 11.295 5.12812 8.99937 4.65125V4C8.99937 3.44781 8.55187 3 7.99999 3C7.44812 3 7.00062 3.44781 7.00062 4V4.65125C4.70499 5.12812 3.00249 7.07188 3.00249 9.5C3.00249 12.6969 1.8728 13.6728 1.26905 14.3216C1.08155 14.5231 0.998429 14.7641 0.999991 15C1.00343 15.5125 1.40562 16 2.00312 16H13.9969C14.5944 16 14.9969 15.5125 15 15C15.0016 14.7641 14.9184 14.5228 14.7309 14.3216Z\"\n      fill=\"#C5C7CD\"\n    />\n    <circle\n      cx=\"13\"\n      cy=\"5\"\n      r=\"3.75\"\n      fill=\"#3751FF\"\n      stroke=\"#F7F8FC\"\n      strokeWidth=\"1.5\"\n    />\n  </svg>\n);\n","import React, { Component } from \"react\";\nimport UserStore from \"../../../UserStore\";\nimport { Button } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nclass Buttons extends Component {\n  async doesLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n        UserStore.sessionID = \"\";\n        UserStore.name = \"\";\n        UserStore.state = \"\";\n        UserStore.address = \"\";\n        return <Redirect to=\"/login\" /> + window.location.reload(false);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    return (\n      <>\n        <Button\n          className=\"button_login\"\n          onClick={() => this.doesLogout()}\n          variant=\"primary\"\n          type=\"submit\"\n        >\n          Log Out\n        </Button>\n      </>\n    );\n  }\n}\nexport default Buttons;\n","import React from \"react\";\nimport { string } from \"prop-types\";\nimport { Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport IconBellNew from \"../assets/icon-bell-new\";\n\nimport Butts from \"./Button\";\nconst styles = StyleSheet.create({\n  avatar: {\n    height: 35,\n    width: 35,\n    borderRadius: 50,\n    marginLeft: 14,\n    border: \"1px solid #DFE0EB\",\n  },\n  container: {\n    height: 40,\n  },\n  cursorPointer: {\n    cursor: \"pointer\",\n  },\n  name: {\n    fontFamily: \"Muli\",\n    fontStyle: \"normal\",\n    fontWeight: 600,\n    fontSize: 14,\n    lineHeight: \"20px\",\n    textAlign: \"right\",\n    letterSpacing: 0.2,\n    \"@media (max-width: 768px)\": {\n      display: \"none\",\n    },\n  },\n  separator: {\n    borderLeft: \"1px solid #DFE0EB\",\n    marginLeft: 32,\n    marginRight: 32,\n    height: 32,\n    width: 2,\n    \"@media (max-width: 768px)\": {\n      marginLeft: 12,\n      marginRight: 12,\n    },\n  },\n  title: {\n    fontFamily: \"Muli\",\n    fontStyle: \"normal\",\n    fontWeight: \"bold\",\n    fontSize: 24,\n    lineHeight: \"30px\",\n    letterSpacing: 0.3,\n    \"@media (max-width: 768px)\": {\n      marginLeft: 36,\n    },\n    \"@media (max-width: 468px)\": {\n      fontSize: 20,\n    },\n  },\n  iconStyles: {\n    cursor: \"pointer\",\n    marginLeft: 25,\n    \"@media (max-width: 768px)\": {\n      marginLeft: 12,\n    },\n  },\n});\n\nfunction HeaderComponent(props) {\n  const { icon, title, ...otherProps } = props;\n  return (\n    <Row\n      className={css(styles.container)}\n      vertical=\"center\"\n      horizontal=\"space-between\"\n      {...otherProps}\n    >\n      <span className={css(styles.title)}></span>\n      <Row vertical=\"center\">\n        <div className={css(styles.iconStyles)}></div>\n        <div className={css(styles.iconStyles)}>\n          <IconBellNew />\n        </div>\n        <div className={css(styles.separator)}></div>\n        <Row vertical=\"center\">\n          <Butts />\n        </Row>\n      </Row>\n    </Row>\n  );\n}\n\nHeaderComponent.propTypes = {\n  title: string,\n};\n\nexport default HeaderComponent;\n","import React, { Component } from \"react\";\nimport { StyleSheet, css } from \"aphrodite/no-important\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport request from \"../../../images/box-request.svg\";\nimport { Link } from \"react-router-dom\";\nimport { faPhoneAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst styles = StyleSheet.create({\n  cardsContainer: {\n    marginRight: -30,\n    marginTop: -30,\n  },\n  cardRow: {\n    marginTop: 30,\n    \"@media (max-width: 768px)\": {\n      marginTop: 0,\n    },\n  },\n  img: {\n    width: 85,\n    height: 85,\n    paddingTop: 25,\n  },\n  links: {\n    backgroundColor: \"#fff\",\n    \":hover\": {\n      backgroundColor: \"#00000\",\n    },\n  },\n  miniCardContainer: {\n    flexGrow: 1,\n    marginRight: 30,\n    \"@media (max-width: 768px)\": {\n      marginTop: 30,\n      maxWidth: \"none\",\n    },\n  },\n  todayTrends: {\n    marginTop: 30,\n  },\n  lastRow: {\n    marginTop: 30,\n  },\n  unresolvedTickets: {\n    marginRight: 30,\n    \"@media (max-width: 1024px)\": {\n      marginRight: 0,\n    },\n  },\n  tasks: {\n    marginTop: 0,\n    \"@media (max-width: 1024px)\": {\n      marginTop: 30,\n    },\n  },\n});\nclass ContentComponent extends Component {\n  render() {\n    return (\n      <>\n        <Container className=\"cont\">\n          <Row>\n            <Col sm={3}>\n              <div className=\"small-ball\"></div>\n            </Col>\n            <Col sm={6}>\n              <Link className={css(styles.links)}>\n                <div className=\"big-ball\">\n                  <img\n                    className={css(styles.img)}\n                    src={request}\n                    alt=\"request a pickup\"\n                  />\n                  <p>Request a Pickup</p>\n                </div>\n              </Link>\n            </Col>\n            <Col sm={3}>\n              <div className=\"small-ball\"></div>\n            </Col>\n            <div\n              className=\"box-left-dashboard\"\n              style={{ width: \"100% !important\" }}\n            >\n              <span class=\"red\"></span>\n              <h2 class=\"reder\" style={{ position: \"relative\", top: \"-1em\" }}>\n                Your Shipments\n              </h2>\n            </div>\n\n            <div className=\"box-left-dashboard1\">\n              <h2\n                class=\"reder\"\n                style={{\n                  position: \"relative\",\n                  fontFamily: \"Nunito, sans-serif\",\n                  fontWeight: \"600\",\n                  fontSize: \"14px\",\n                  color: \"red\",\n                  top: \"-1em\",\n                }}\n              >\n                Support\n              </h2>\n              <p>\n                <FontAwesomeIcon\n                  onClick={this.back}\n                  icon={faPhoneAlt}\n                  style={{\n                    backgroundColor: \"#800000\",\n                    color: \"#FFF\",\n                    width: \"3.5em\",\n                    height: \"3.5em\",\n                    padding: \"12px\",\n                    borderRadius: \"3em\",\n                  }}\n                />\n              </p>\n            </div>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default ContentComponent;\n","import React, { Component } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport UserStore from \"../../../UserStore\";\nimport {\n  faMoneyBillWave,\n  faCreditCard,\n  faIdBadge,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Doc from \"../assets/doc.svg\";\nimport Parcel from \"../assets/parcel.svg\";\n\nclass Interstate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      to: \"\",\n      date: \"\",\n      time: \"\",\n      plocation: \"\",\n      dlocation: \"\",\n      rname: \"\",\n      rphone: \"\",\n      itemtype: \"\",\n      itemweight: \"\",\n      amount: \"\",\n      payment: \"\",\n      loading: false,\n    };\n  }\n  async ScheduleShipment() {\n    if (\n      this.state.to !== \"\" &&\n      this.state.plocation !== \"\" &&\n      this.state.dlocation !== \"\" &&\n      this.state.rname !== \"\" &&\n      this.state.rphone !== \"\" &&\n      this.state.itemtype !== \"\" &&\n      this.state.itemweight !== \"\" &&\n      this.state.amount !== \"\" &&\n      this.state.payment !== \"\"\n    ) {\n      try {\n        this.setState({ loading: true });\n        setTimeout(() => {\n          this.setState({ loading: true });\n        }, 3000);\n        let res = await fetch(\"/scheduledomestic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessionID: UserStore.sessionID,\n            sendername: UserStore.name,\n            senderphone: UserStore.username,\n            from: UserStore.state,\n            to: this.state.to,\n            date: \"\",\n            time: \"\",\n            plocation: this.state.plocation,\n            dlocation: this.state.dlocation,\n            rname: this.state.rname,\n            rphone: this.state.rphone,\n            itemtype: this.state.itemtype,\n            itemweight: this.state.itemweight,\n            amount: this.state.amount,\n            payment: this.state.payment,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          return alert(\n            \"Congratulations, your pickup is scheduled successfully\"\n          );\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      return alert(\"Please fill out your form completely\");\n    }\n  }\n  handleform(e) {\n    e.preventDefault();\n  }\n\n  setInputValue(property, e) {\n    this.setState({\n      [property]: e,\n    });\n    console.log(([property] = e));\n  }\n  nextStep = () => {\n    const { step } = this.state;\n    const amounts = (parseFloat(this.state.itemweight) / 0.5) * 1500;\n    this.setState({\n      step: step + 1,\n      amount: amounts,\n    });\n  };\n  continue = (e) => {\n    e.preventDefault();\n    this.nextStep();\n  };\n  //Go Back\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.prevStep();\n  };\n\n  toggleContent() {\n    switch (this.state.step) {\n      case 0:\n        return (\n          <>\n            <div className=\"contentent\">\n              <Form onSubmit={this.handleform}>\n                <p style={{ textAlign: \"center\" }}>\n                  <i>\n                    Please enter your convenient Date and Time for the Pickup\n                    <br />\n                    Time must be between 8am to 8pm{\" \"}\n                  </i>\n                </p>\n                <br />\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"date\"\n                      value={this.state.date ? this.state.date : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"date\", e.target.value)\n                      }\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"time\"\n                      value={this.state.time ? this.state.time : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"time\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Button\n                  className=\"button_login\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={this.continue}\n                >\n                  Continue\n                </Button>\n              </Form>\n            </div>\n          </>\n        );\n      case 1:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Enter the Pick and Delivery Location below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>From</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                      <Form.Label>To</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        name=\"tostate\"\n                        value={this.state.to ? this.state.to : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"to\", e.target.value)\n                        }\n                        as=\"select\"\n                        required\n                      >\n                        <option></option>\n                        <option>Abuja</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Pickup Location(Address)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      className=\"form-input-text\"\n                      rows=\"3\"\n                      value={this.state.plocation ? this.state.plocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"plocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>\n                      Delivery/Receiver`s Location(Address)\n                    </Form.Label>\n                    <Form.Control\n                      className=\"form-input-text\"\n                      as=\"textarea\"\n                      rows=\"3\"\n                      value={this.state.dlocation ? this.state.dlocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"dlocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>Receiver`s Name</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rname ? this.state.rname : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rname\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>Receiver`s Tel</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rphone ? this.state.rphone : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rphone\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Select the item type and enter its weight below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Shipment-Details\">\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"document\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"document\">\n                          <br />\n                          <img\n                            src={Doc}\n                            alt=\"documents\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Document(s)\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            Documents and printed matter\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"parcel\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"parcel\">\n                          <br />\n                          <img\n                            src={Parcel}\n                            alt=\"Parcel\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Parcel\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            All other Packages or Objects\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>\n                        Weight<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        value={\n                          this.state.itemweight ? this.state.itemweight : \"\"\n                        }\n                        onChange={(e) =>\n                          this.setInputValue(\"itemweight\", e.target.value)\n                        }\n                        placeholder=\"0.5\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                      <Form.Label>\n                        Unit<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        as=\"select\"\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>Kg</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 3:\n        const { loading } = this.state;\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i\n                      style={{\n                        color: \"red\",\n                        fontSize: \"20px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      Amount:\n                    </i>{\" \"}\n                    <p\n                      style={{\n                        color: \"green\",\n                        fontSize: \"30px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      {this.state.amount}\n                    </p>\n                  </p>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      How do you want to pay?\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Payment-Type\">\n                    <div className=\"Desktop\">\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"cash\"\n                            name=\"payment\"\n                            value={this.state.payment ? this.state.payment : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"cash\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faMoneyBillWave}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            In Cash by Shipper or Receiver\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"card\"\n                            name=\"payment\"\n                            value={\n                              this.setState.payment ? this.state.payment : \"\"\n                            }\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"card\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faCreditCard}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            By Credit Card by the Shipper\n                            <div class=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"subs\"\n                            name=\"payment\"\n                            value={this.state.subs ? this.state.subs : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"subs\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"subs\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faIdBadge}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            Subscription Plans <br /> <br />\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        onClick={() => this.ScheduleShipment()}\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        disabled={loading}\n                        type=\"submit\"\n                      >\n                        {loading && (\n                          <FontAwesomeIcon\n                            onClick={this.continue}\n                            icon={faSpinner}\n                            spin\n                          />\n                        )}\n                        {loading && <span> Processing</span>}\n\n                        {!loading && <span>Request</span>}\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      default:\n        return (\n          <>\n            <div>\n              <div>\n                <p>Please refresh your page</p>\n              </div>\n            </div>\n          </>\n        );\n    }\n  }\n  render() {\n    return (\n      <>\n        <section>{this.toggleContent()}</section>\n      </>\n    );\n  }\n}\n\nexport default Interstate;\n","import React, { Component } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { Tabs, Tab } from \"react-mdl\";\nimport { Redirect } from \"react-router-dom\";\nimport UserStore from \"../../../UserStore\";\nimport Interstate from \"./interstatep\";\n\nimport {\n  faEdit,\n  faMoneyBillWave,\n  faCreditCard,\n  faIdBadge,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\n\nimport Doc from \"../assets/doc.svg\";\nimport Parcel from \"../assets/parcel.svg\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\n\nclass ScheduleShipment extends Component {\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: \"Shipment\",\n      step: 1,\n      activeTab: 0,\n      date: \"\",\n      time: \"\",\n      plocation: \"\",\n      dlocation: \"\",\n      rname: \"\",\n      rphone: \"\",\n      itemtype: \"\",\n      itemweight: \"\",\n      amount: \"\",\n      payment: \"\",\n      loading: false,\n    };\n  }\n  handleform(e) {\n    e.preventDefault();\n  }\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n  async ScheduleShipment() {\n    if (\n      this.state.plocation !== \"\" &&\n      this.state.dlocation !== \"\" &&\n      this.state.rname !== \"\" &&\n      this.state.rphone !== \"\" &&\n      this.state.itemtype !== \"\" &&\n      this.state.itemweight !== \"\" &&\n      this.state.amount !== \"\" &&\n      this.state.payment !== \"\"\n    ) {\n      try {\n        this.setState({ loading: true });\n        setTimeout(() => {\n          this.setState({ loading: true });\n        }, 3000);\n        let res = await fetch(\"/scheduledomestic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessionID: UserStore.sessionID,\n            sendername: UserStore.name,\n            senderphone: UserStore.username,\n            from: UserStore.state,\n            to: UserStore.state,\n            date: \"\",\n            time: \"\",\n            plocation: this.state.plocation,\n            dlocation: this.state.dlocation,\n            rname: this.state.rname,\n            rphone: this.state.rphone,\n            itemtype: this.state.itemtype,\n            itemweight: this.state.itemweight,\n            amount: this.state.amount,\n            payment: this.state.payment,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          return alert(\n            \"Congratulations, your pickup is scheduled successfully\"\n          );\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      return alert(\"Please fill out your form completely\");\n    }\n  }\n  setInputValue(property, e) {\n    this.setState({\n      [property]: e,\n    });\n\n    console.log(([property] = e));\n    console.log(this.state);\n    console.log(this.state.amount);\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    const amounts = (parseFloat(this.state.itemweight) / 0.5) * 500;\n    this.setState({\n      step: step + 1,\n      amount: amounts,\n    });\n  };\n  continue = (e) => {\n    e.preventDefault();\n\n    this.nextStep();\n  };\n  //Go Back\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.prevStep();\n  };\n\n  toggleContent() {\n    switch (this.state.step) {\n      case 0:\n        return (\n          <>\n            <div className=\"contentent\">\n              <Form onSubmit={this.handleform}>\n                <p style={{ textAlign: \"center\" }}>\n                  <i>\n                    Please enter your convenient Date and Time for the Pickup\n                    <br />\n                    Time must be between 8am to 8pm{\" \"}\n                  </i>\n                </p>\n                <br />\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"date\"\n                      value={this.state.date ? this.state.date : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"date\", e.target.value)\n                      }\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"time\"\n                      value={this.state.time ? this.state.time : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"time\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Button\n                  className=\"button_login\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={this.continue}\n                >\n                  Continue\n                </Button>\n              </Form>\n            </div>\n          </>\n        );\n      case 1:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Enter the Pick and Delivery Location below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>From</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>To</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Pickup Location(Address)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      className=\"form-input-text\"\n                      rows=\"3\"\n                      value={this.state.plocation ? this.state.plocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"plocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>\n                      Delivery/Receiver`s Location(Address)\n                    </Form.Label>\n                    <Form.Control\n                      className=\"form-input-text\"\n                      as=\"textarea\"\n                      rows=\"3\"\n                      value={this.state.dlocation ? this.state.dlocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"dlocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>Receiver`s Name</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rname ? this.state.rname : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rname\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>Receiver`s Tel</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rphone ? this.state.rphone : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rphone\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Select the item type and enter its weight below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Shipment-Details\">\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"document\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"document\">\n                          <br />\n                          <img\n                            src={Doc}\n                            alt=\"documents\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Document(s)\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            Documents and printed matter\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"parcel\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"parcel\">\n                          <br />\n                          <img\n                            src={Parcel}\n                            alt=\"Parcel\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Parcel\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            All other Packages or Objects\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>\n                        Weight<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        value={\n                          this.state.itemweight ? this.state.itemweight : \"\"\n                        }\n                        onChange={(e) =>\n                          this.setInputValue(\"itemweight\", e.target.value)\n                        }\n                        placeholder=\"0.5\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                      <Form.Label>\n                        Unit<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        as=\"select\"\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>Kg</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 3:\n        const { loading } = this.state;\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i\n                      style={{\n                        color: \"red\",\n                        fontSize: \"20px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      Amount:\n                    </i>{\" \"}\n                    <p\n                      style={{\n                        color: \"green\",\n                        fontSize: \"30px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      {this.state.amount}\n                    </p>\n                  </p>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      How do you want to pay?\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Payment-Type\">\n                    <div className=\"Desktop\">\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"cash\"\n                            name=\"payment\"\n                            value={this.state.payment ? this.state.payment : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"cash\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faMoneyBillWave}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            In Cash by Shipper or Receiver\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"card\"\n                            name=\"payment\"\n                            value={\n                              this.setState.payment ? this.state.payment : \"\"\n                            }\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"card\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faCreditCard}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            By Credit Card by the Shipper\n                            <div class=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"subs\"\n                            name=\"payment\"\n                            value={this.state.subs ? this.state.subs : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"subs\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"subs\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faIdBadge}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            Subscription Plans <br /> <br />\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        onClick={() => this.ScheduleShipment()}\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        disabled={loading}\n                        type=\"submit\"\n                      >\n                        {loading && (\n                          <FontAwesomeIcon\n                            onClick={this.continue}\n                            icon={faSpinner}\n                            spin\n                          />\n                        )}\n                        {loading && <span> Processing</span>}\n\n                        {!loading && <span>Request</span>}\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      default:\n        return (\n          <>\n            <div>\n              <div>\n                <p>Please refresh your page</p>\n              </div>\n            </div>\n          </>\n        );\n    }\n  }\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      return this.toggleContent();\n    } else if (this.state.activeTab === 1) {\n      return <Interstate />;\n    }\n  }\n  render() {\n    if (UserStore.isLoggedIn) {\n      const { selectedItem } = this.state;\n      return (\n        <>\n          <div className=\"dashboard\">\n            <Row className={css(styles.container)}>\n              <SidebarComponent\n                selectedItem={selectedItem}\n                onChange={(selectedItem) => this.setState({ selectedItem })}\n              />\n              <Column flexGrow={1} className={css(styles.mainBlock)}>\n                <HeaderComponent title={selectedItem} />\n                <div className={css(styles.content)}>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      padding: \"2em\",\n                      borderRadius: \"0.5em\",\n                    }}\n                  >\n                    <div className=\"demo-tabs\">\n                      <div style={{ textAlign: \"center\" }}>\n                        <p\n                          style={{\n                            fontFamily: \"Nunito, sans-serif\",\n                            color: \"#800000\",\n                            fontWeight: \"900\",\n                          }}\n                        >\n                          Online Shipping\n                        </p>\n                        <FontAwesomeIcon\n                          icon={faEdit}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <p\n                          style={{\n                            fontFamily: \"Roboto, sans-serif\",\n                            color: \"#00000\",\n                            fontSize: \"20px\",\n                          }}\n                        >\n                          Prepare a Shipment\n                        </p>\n                        <p\n                          style={{\n                            fontFamily: \"Nunito, sans-serif\",\n                            color: \"#00000\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Fill in your details to prepare the shipment label\n                        </p>\n                      </div>\n\n                      <hr />\n                      <Tabs\n                        activeTab={this.state.activeTab}\n                        onChange={(tabId) =>\n                          this.setState({ activeTab: tabId })\n                        }\n                        ripple\n                      >\n                        <Tab>Domestic</Tab>\n                        <Tab>Interstate</Tab>\n                      </Tabs>\n                      <section>{this.toggleCategories()}</section>\n                    </div>\n                  </div>\n                </div>\n              </Column>\n            </Row>\n          </div>\n        </>\n      );\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\n\nexport default ScheduleShipment;\n","import React, { Component } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport UserStore from \"../../../UserStore\";\nimport {\n  faMoneyBillWave,\n  faCreditCard,\n  faIdBadge,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport Doc from \"../assets/doc.svg\";\nimport Parcel from \"../assets/parcel.svg\";\n\nclass Interstate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      step: 1,\n      to: \"\",\n      date: \"\",\n      time: \"\",\n      plocation: \"\",\n      dlocation: \"\",\n      rname: \"\",\n      rphone: \"\",\n      itemtype: \"\",\n      itemweight: \"\",\n      amount: \"\",\n      payment: \"\",\n      loading: false,\n    };\n  }\n  async ScheduleShipment() {\n    if (\n      this.state.to !== \"\" &&\n      this.state.date !== \"\" &&\n      this.state.time !== \"\" &&\n      this.state.plocation !== \"\" &&\n      this.state.dlocation !== \"\" &&\n      this.state.rname !== \"\" &&\n      this.state.rphone !== \"\" &&\n      this.state.itemtype !== \"\" &&\n      this.state.itemweight !== \"\" &&\n      this.state.amount !== \"\" &&\n      this.state.payment !== \"\"\n    ) {\n      try {\n        this.setState({ loading: true });\n        setTimeout(() => {\n          this.setState({ loading: true });\n        }, 3000);\n        let res = await fetch(\"/scheduledomestic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessionID: UserStore.sessionID,\n            sendername: UserStore.name,\n            senderphone: UserStore.username,\n            from: UserStore.state,\n            to: this.state.to,\n            date: this.state.date,\n            time: this.state.time,\n            plocation: this.state.plocation,\n            dlocation: this.state.dlocation,\n            rname: this.state.rname,\n            rphone: this.state.rphone,\n            itemtype: this.state.itemtype,\n            itemweight: this.state.itemweight,\n            amount: this.state.amount,\n            payment: this.state.payment,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          return alert(\n            \"Congratulations, your pickup is scheduled successfully\"\n          );\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      return alert(\"Please fill out your form completely\");\n    }\n  }\n  handleform(e) {\n    e.preventDefault();\n  }\n\n  setInputValue(property, e) {\n    this.setState({\n      [property]: e,\n    });\n    console.log(([property] = e));\n  }\n  nextStep = () => {\n    const { step } = this.state;\n    const amounts = (parseFloat(this.state.itemweight) / 0.5) * 1500;\n    this.setState({\n      step: step + 1,\n      amount: amounts,\n    });\n  };\n  continue = (e) => {\n    e.preventDefault();\n    this.nextStep();\n  };\n  //Go Back\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.prevStep();\n  };\n\n  toggleContent() {\n    switch (this.state.step) {\n      case 1:\n        return (\n          <>\n            <div className=\"contentent\">\n              <Form onSubmit={this.handleform}>\n                <p style={{ textAlign: \"center\" }}>\n                  <i>\n                    Please enter your convenient Date and Time for the Pickup\n                    <br />\n                    Time must be between 8am to 8pm{\" \"}\n                  </i>\n                </p>\n                <br />\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"date\"\n                      value={this.state.date ? this.state.date : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"date\", e.target.value)\n                      }\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"time\"\n                      value={this.state.time ? this.state.time : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"time\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Button\n                  className=\"button_login\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={this.continue}\n                >\n                  Continue\n                </Button>\n              </Form>\n            </div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Enter the Pick and Delivery Location below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>From</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                      <Form.Label>To</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        name=\"tostate\"\n                        value={this.state.to ? this.state.to : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"to\", e.target.value)\n                        }\n                        as=\"select\"\n                        required\n                      >\n                        <option></option>\n                        <option>Abuja</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Pickup Location(Address)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      className=\"form-input-text\"\n                      rows=\"3\"\n                      value={this.state.plocation ? this.state.plocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"plocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>\n                      Delivery/Receiver`s Location(Address)\n                    </Form.Label>\n                    <Form.Control\n                      className=\"form-input-text\"\n                      as=\"textarea\"\n                      rows=\"3\"\n                      value={this.state.dlocation ? this.state.dlocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"dlocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>Receiver`s Name</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rname ? this.state.rname : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rname\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>Receiver`s Tel</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rphone ? this.state.rphone : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rphone\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Select the item type and enter its weight below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Shipment-Details\">\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"document\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"document\">\n                          <br />\n                          <img\n                            src={Doc}\n                            alt=\"documents\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Document(s)\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            Documents and printed matter\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"parcel\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"parcel\">\n                          <br />\n                          <img\n                            src={Parcel}\n                            alt=\"Parcel\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Parcel\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            All other Packages or Objects\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>\n                        Weight<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        value={\n                          this.state.itemweight ? this.state.itemweight : \"\"\n                        }\n                        onChange={(e) =>\n                          this.setInputValue(\"itemweight\", e.target.value)\n                        }\n                        placeholder=\"0.5\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                      <Form.Label>\n                        Unit<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        as=\"select\"\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>Kg</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 4:\n        const { loading } = this.state;\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i\n                      style={{\n                        color: \"red\",\n                        fontSize: \"20px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      Amount:\n                    </i>{\" \"}\n                    <p\n                      style={{\n                        color: \"green\",\n                        fontSize: \"30px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      {this.state.amount}\n                    </p>\n                  </p>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      How do you want to pay?\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Payment-Type\">\n                    <div className=\"Desktop\">\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"cash\"\n                            name=\"payment\"\n                            value={this.state.payment ? this.state.payment : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"cash\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faMoneyBillWave}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            In Cash by Shipper or Receiver\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"card\"\n                            name=\"payment\"\n                            value={\n                              this.setState.payment ? this.state.payment : \"\"\n                            }\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"card\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faCreditCard}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            By Credit Card by the Shipper\n                            <div class=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"subs\"\n                            name=\"payment\"\n                            value={this.state.subs ? this.state.subs : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"subs\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"subs\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faIdBadge}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            Subscription Plans <br /> <br />\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        onClick={() => this.ScheduleShipment()}\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        disabled={loading}\n                        type=\"submit\"\n                      >\n                        {loading && (\n                          <FontAwesomeIcon\n                            onClick={this.continue}\n                            icon={faSpinner}\n                            spin\n                          />\n                        )}\n                        {loading && <span> Processing</span>}\n\n                        {!loading && <span>Request</span>}\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      default:\n        return (\n          <>\n            <div>\n              <div>\n                <p>Please refresh your page</p>\n              </div>\n            </div>\n          </>\n        );\n    }\n  }\n  render() {\n    return (\n      <>\n        <section>{this.toggleContent()}</section>\n      </>\n    );\n  }\n}\n\nexport default Interstate;\n","import React, { Component } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { Tabs, Tab } from \"react-mdl\";\nimport { Redirect } from \"react-router-dom\";\nimport UserStore from \"../../../UserStore\";\nimport Interstate from \"./interstate\";\n\nimport {\n  faEdit,\n  faMoneyBillWave,\n  faCreditCard,\n  faIdBadge,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\n\nimport Doc from \"../assets/doc.svg\";\nimport Parcel from \"../assets/parcel.svg\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\n\nclass ScheduleShipment extends Component {\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: \"Pickup\",\n      step: 1,\n      activeTab: 0,\n      date: \"\",\n      time: \"\",\n      plocation: \"\",\n      dlocation: \"\",\n      rname: \"\",\n      rphone: \"\",\n      itemtype: \"\",\n      itemweight: \"\",\n      amount: \"\",\n      payment: \"\",\n      loading: false,\n    };\n  }\n  handleform(e) {\n    e.preventDefault();\n  }\n  async ScheduleShipment() {\n    if (\n      this.state.date !== \"\" &&\n      this.state.time !== \"\" &&\n      this.state.plocation !== \"\" &&\n      this.state.dlocation !== \"\" &&\n      this.state.rname !== \"\" &&\n      this.state.rphone !== \"\" &&\n      this.state.itemtype !== \"\" &&\n      this.state.itemweight !== \"\" &&\n      this.state.amount !== \"\" &&\n      this.state.payment !== \"\"\n    ) {\n      try {\n        this.setState({ loading: true });\n        setTimeout(() => {\n          this.setState({ loading: true });\n        }, 3000);\n        let res = await fetch(\"/scheduledomestic\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessionID: UserStore.sessionID,\n            sendername: UserStore.name,\n            senderphone: UserStore.username,\n            from: UserStore.state,\n            to: UserStore.state,\n            date: this.state.date,\n            time: this.state.time,\n            plocation: this.state.plocation,\n            dlocation: this.state.dlocation,\n            rname: this.state.rname,\n            rphone: this.state.rphone,\n            itemtype: this.state.itemtype,\n            itemweight: this.state.itemweight,\n            amount: this.state.amount,\n            payment: this.state.payment,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          return alert(\n            \"Congratulations, your pickup is scheduled successfully\"\n          );\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      return alert(\"Please fill out your form completely\");\n    }\n  }\n  setInputValue(property, e) {\n    this.setState({\n      [property]: e,\n    });\n\n    console.log(([property] = e));\n    console.log(this.state);\n    console.log(this.state.amount);\n  }\n\n  nextStep = () => {\n    const { step } = this.state;\n    const amounts = (parseFloat(this.state.itemweight) / 0.5) * 500;\n    this.setState({\n      step: step + 1,\n      amount: amounts,\n    });\n  };\n  continue = (e) => {\n    e.preventDefault();\n\n    this.nextStep();\n  };\n  //Go Back\n  prevStep = () => {\n    const { step } = this.state;\n    this.setState({\n      step: step - 1,\n    });\n  };\n  back = (e) => {\n    e.preventDefault();\n    this.prevStep();\n  };\n\n  toggleContent() {\n    switch (this.state.step) {\n      case 1:\n        return (\n          <>\n            <div className=\"contentent\">\n              <Form onSubmit={this.handleform}>\n                <p style={{ textAlign: \"center\" }}>\n                  <i>\n                    Please enter your convenient Date and Time for the Pickup\n                    <br />\n                    Time must be between 8am to 8pm{\" \"}\n                  </i>\n                </p>\n                <br />\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Date</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"date\"\n                      value={this.state.date ? this.state.date : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"date\", e.target.value)\n                      }\n                      required\n                    />\n                  </Form.Group>\n\n                  <Form.Group as={Col} controlId=\"formGridZip\">\n                    <Form.Label>Time</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"time\"\n                      value={this.state.time ? this.state.time : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"time\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                </Form.Row>\n                <Button\n                  className=\"button_login\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  onClick={this.continue}\n                >\n                  Continue\n                </Button>\n              </Form>\n            </div>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Enter the Pick and Delivery Location below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>From</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>To</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={UserStore.state}\n                        disabled\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>Pickup Location(Address)</Form.Label>\n                    <Form.Control\n                      as=\"textarea\"\n                      className=\"form-input-text\"\n                      rows=\"3\"\n                      value={this.state.plocation ? this.state.plocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"plocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label>\n                      Delivery/Receiver`s Location(Address)\n                    </Form.Label>\n                    <Form.Control\n                      className=\"form-input-text\"\n                      as=\"textarea\"\n                      rows=\"3\"\n                      value={this.state.dlocation ? this.state.dlocation : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"dlocation\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>Receiver`s Name</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rname ? this.state.rname : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rname\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Form.Label>Receiver`s Tel</Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        type=\"text\"\n                        value={this.state.rphone ? this.state.rphone : \"\"}\n                        onChange={(e) =>\n                          this.setInputValue(\"rphone\", e.target.value)\n                        }\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Select the item type and enter its weight below!\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Shipment-Details\">\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"document\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"document\">\n                          <br />\n                          <img\n                            src={Doc}\n                            alt=\"documents\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Document(s)\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            Documents and printed matter\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                    <div className=\"cards\">\n                      <div className=\"radio-item\">\n                        <input\n                          type=\"radio\"\n                          id=\"parcel\"\n                          name=\"itemtype\"\n                          value={this.state.itemtype ? this.state.itemtype : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\n                              \"itemtype\",\n                              (this.setState.itemtype = e.target.id)\n                            )\n                          }\n                        />\n\n                        <label for=\"parcel\">\n                          <br />\n                          <img\n                            src={Parcel}\n                            alt=\"Parcel\"\n                            width=\"60px\"\n                            height=\"60px\"\n                          />\n                          <br />\n                          Parcel\n                          <p\n                            style={{\n                              fontSize: \"12px\",\n                              fontFamily: \"Roboto, sans-serif\",\n                            }}\n                          >\n                            All other Packages or Objects\n                          </p>\n                          <div className=\"check\"></div>\n                        </label>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridCity\">\n                      <Form.Label>\n                        Weight<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        value={\n                          this.state.itemweight ? this.state.itemweight : \"\"\n                        }\n                        onChange={(e) =>\n                          this.setInputValue(\"itemweight\", e.target.value)\n                        }\n                        placeholder=\"0.5\"\n                        required\n                      />\n                    </Form.Group>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                      <Form.Label>\n                        Unit<span style={{ color: \"red\" }}>*</span>\n                      </Form.Label>\n                      <Form.Control\n                        className=\"form-input\"\n                        as=\"select\"\n                        defaultValue=\"Choose...\"\n                      >\n                        <option>Kg</option>\n                      </Form.Control>\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.continue}\n                      >\n                        Continue\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      case 4:\n        const { loading } = this.state;\n        return (\n          <>\n            <div className=\"contentent\">\n              <form>\n                <Form onSubmit={this.handleform}>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i\n                      style={{\n                        color: \"red\",\n                        fontSize: \"20px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      Amount:\n                    </i>{\" \"}\n                    <p\n                      style={{\n                        color: \"green\",\n                        fontSize: \"30px\",\n                        fontWeight: \"600\",\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      {this.state.amount}\n                    </p>\n                  </p>\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      How do you want to pay?\n                      <br />\n                    </i>\n                  </p>\n                  <br />\n                  <div className=\"Payment-Type\">\n                    <div className=\"Desktop\">\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"cash\"\n                            name=\"payment\"\n                            value={this.state.payment ? this.state.payment : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"cash\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faMoneyBillWave}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            In Cash by Shipper or Receiver\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"card\"\n                            name=\"payment\"\n                            value={\n                              this.setState.payment ? this.state.payment : \"\"\n                            }\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"payment\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"card\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faCreditCard}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            By Credit Card by the Shipper\n                            <div class=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                      <div className=\"cards\">\n                        <div className=\"radio-item1\">\n                          <input\n                            type=\"radio\"\n                            id=\"subs\"\n                            name=\"payment\"\n                            value={this.state.subs ? this.state.subs : \"\"}\n                            onChange={(e) =>\n                              this.setInputValue(\n                                \"subs\",\n                                (this.setState.payment = e.target.id)\n                              )\n                            }\n                          />\n\n                          <label for=\"subs\">\n                            <br />\n                            <FontAwesomeIcon\n                              icon={faIdBadge}\n                              style={{\n                                display: \"inline-block\",\n                                color: \"#800000\",\n                                fontSize: \"30px\",\n                              }}\n                            />\n                            <br />\n                            Subscription Plans <br /> <br />\n                            <div className=\"check\"></div>\n                          </label>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <Form.Row>\n                    <Form.Group as={Col} controlId=\"formGridZip\">\n                      <Button\n                        className=\"button_login_back\"\n                        variant=\"primary\"\n                        type=\"submit\"\n                        onClick={this.back}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        onClick={() => this.ScheduleShipment()}\n                        className=\"button_login left1\"\n                        variant=\"primary\"\n                        disabled={loading}\n                        type=\"submit\"\n                      >\n                        {loading && (\n                          <FontAwesomeIcon\n                            onClick={this.continue}\n                            icon={faSpinner}\n                            spin\n                          />\n                        )}\n                        {loading && <span> Processing</span>}\n\n                        {!loading && <span>Request</span>}\n                      </Button>\n                    </Form.Group>\n                    <Form.Group as={Col} controlId=\"formGridZip\"></Form.Group>\n                  </Form.Row>\n                </Form>\n              </form>\n            </div>\n          </>\n        );\n      default:\n        return (\n          <>\n            <div>\n              <div>\n                <p>Please refresh your page</p>\n              </div>\n            </div>\n          </>\n        );\n    }\n  }\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      return this.toggleContent();\n    } else if (this.state.activeTab === 1) {\n      return <Interstate />;\n    }\n  }\n  render() {\n    if (UserStore.isLoggedIn) {\n      const { selectedItem } = this.state;\n\n      return (\n        <>\n          <div className=\"dashboard\">\n            <Row className={css(styles.container)}>\n              <SidebarComponent\n                selectedItem={selectedItem}\n                onChange={(selectedItem) => this.setState({ selectedItem })}\n              />\n              <Column flexGrow={1} className={css(styles.mainBlock)}>\n                <HeaderComponent title={selectedItem} />\n                <div className={css(styles.content)}>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      padding: \"2em\",\n                      borderRadius: \"0.5em\",\n                    }}\n                  >\n                    <div className=\"demo-tabs\">\n                      <div style={{ textAlign: \"center\" }}>\n                        <p\n                          style={{\n                            fontFamily: \"Nunito, sans-serif\",\n                            color: \"#800000\",\n                            fontWeight: \"900\",\n                          }}\n                        >\n                          Online Shipping\n                        </p>\n                        <FontAwesomeIcon\n                          icon={faEdit}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <p\n                          style={{\n                            fontFamily: \"Roboto, sans-serif\",\n                            color: \"#00000\",\n                            fontSize: \"20px\",\n                          }}\n                        >\n                          Schedule Pickup\n                        </p>\n                        <p\n                          style={{\n                            fontFamily: \"Nunito, sans-serif\",\n                            color: \"#00000\",\n                            fontSize: \"16px\",\n                          }}\n                        >\n                          Fill in the form below to Schedule a Pickup of your\n                          item(s).\n                        </p>\n                      </div>\n\n                      <hr />\n                      <Tabs\n                        activeTab={this.state.activeTab}\n                        onChange={(tabId) =>\n                          this.setState({ activeTab: tabId })\n                        }\n                        ripple\n                      >\n                        <Tab>Domestic</Tab>\n                        <Tab>Interstate</Tab>\n                      </Tabs>\n                      <section>{this.toggleCategories()}</section>\n                    </div>\n                  </div>\n                </div>\n              </Column>\n            </Row>\n          </div>\n        </>\n      );\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\n\nexport default ScheduleShipment;\n","import React, { Component } from \"react\";\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport { Redirect } from \"react-router-dom\";\nimport UserStore from \"../../../UserStore\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\n\nconst Styles = makeStyles({\n  table: {\n    minWidth: \"250 !important\",\n  },\n});\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n    width: \"100%\",\n  },\n});\n\nclass MyShipments extends Component {\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n    try {\n      let res = await fetch(\"/fetchhistory\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          sessionID: UserStore.sessionID,\n        }),\n      });\n      const results = await res.json();\n      this.setState({ results });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: \"Myshipments\",\n      results: [],\n    };\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n\n  render() {\n    if (UserStore.isLoggedIn) {\n      const { selectedItem } = this.state;\n      return (\n        <>\n          <div className=\"dashboard\">\n            <Row className={css(styles.container)}>\n              <SidebarComponent\n                selectedItem={selectedItem}\n                onChange={(selectedItem) => this.setState({ selectedItem })}\n              />\n              <Column flexGrow={1} className={css(styles.mainBlock)}>\n                <HeaderComponent title={selectedItem} />\n                <div className={css(styles.content)}>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      padding: \"2em\",\n                      borderRadius: \"0.5em\",\n                      width: \"100% !important\",\n                      margin: \"0 auto\",\n                    }}\n                  >\n                    <div className=\"demo-tabs\">\n                      <div style={{ textAlign: \"center\" }}>\n                        <FontAwesomeIcon\n                          icon={faHistory}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <p\n                          style={{\n                            fontFamily: \"Roboto, sans-serif\",\n                            color: \"#00000\",\n                            fontSize: \"20px\",\n                          }}\n                        >\n                          Your Shipment(s) History\n                        </p>\n\n                        <hr />\n                      </div>\n\n                      <div className=\"Play-Ground\">\n                        <section>\n                          <div\n                            className=\"jss53 jss55\"\n                            style={{ width: \"30% !important\" }}\n                          >\n                            <TableContainer component={Paper}>\n                              <Table\n                                className={Styles.table}\n                                aria-label=\"simple table\"\n                              >\n                                <TableHead>\n                                  <TableRow>\n                                    <TableCell>Item Type</TableCell>\n                                    <TableCell align=\"right\">\n                                      Reciever`s Details\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      Date&nbsp;\n                                    </TableCell>\n                                    <TableCell align=\"right\">\n                                      Status&nbsp;\n                                    </TableCell>\n                                  </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                  {this.state.results.map((result) => (\n                                    <TableRow key={result.itemtype}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                        {result.itemtype}\n                                      </TableCell>\n                                      <TableCell align=\"right\">\n                                        {result.rname}-{result.rphone}-\n                                        {result.dlocation}\n                                      </TableCell>\n                                      <TableCell align=\"right\">\n                                        {result.darchieved}\n                                      </TableCell>\n                                      <TableCell align=\"right\">\n                                        Delivered\n                                      </TableCell>\n                                    </TableRow>\n                                  ))}\n                                </TableBody>\n                              </Table>\n                            </TableContainer>\n                          </div>\n                        </section>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Column>\n            </Row>\n          </div>\n        </>\n      );\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\n\nexport default MyShipments;\n","import React, { Component } from \"react\";\nimport { Tabs, Tab } from \"react-mdl\";\nimport { Column, Row } from \"simple-flexbox\";\nimport UserStore from \"../../../UserStore\";\nimport { Redirect } from \"react-router-dom\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\n\nclass Settings extends Component {\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: 0,\n      selectedItem: \"Settings\",\n      name: UserStore.name,\n      rstate: UserStore.state,\n      address: UserStore.address,\n      oldpassword: \"\",\n      newpassword: \"\",\n      cpassword: \"\",\n      loading: false,\n      loader: false,\n    };\n  }\n  handleform(e) {\n    e.preventDefault();\n  }\n\n  setInputValue(property, e) {\n    this.setState({\n      [property]: e,\n    });\n  }\n  async UpdatePersonal() {\n    if (!this.state.name) {\n      return;\n    }\n    if (!this.state.rstate) {\n      return;\n    }\n    if (!this.state.address) {\n      return;\n    }\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: true });\n    }, 3000);\n\n    try {\n      let res = await fetch(\"/updateinfo\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          sessionID: UserStore.sessionID,\n          name: this.state.name,\n          state: this.state.rstate,\n          address: this.state.address,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.name = result.name;\n        UserStore.state = result.state;\n        UserStore.address = result.address;\n        return alert(\"Information Updated Successfully\");\n      } else if (result && result.success === false) {\n        alert(\"An error occur, please try later\");\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  async UpdatePassword() {\n    const password = UserStore.password;\n    if (this.state.oldpassword === password) {\n      if (this.state.newpassword === this.state.cpassword) {\n        this.setState({ loader: true });\n        setTimeout(() => {\n          this.setState({ loader: true });\n        }, 3000);\n        try {\n          let res = await fetch(\"/updatepassword\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              sessionID: UserStore.sessionID,\n              password: this.state.newpassword,\n            }),\n          });\n\n          let result = await res.json();\n          if (result && result.success) {\n            return alert(\"Password Changed Successfully\");\n          } else if (result && result.success === false) {\n            alert(\"An error occur, please try later\");\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        return alert(\"New and Confirm new Password must match\");\n      }\n    } else {\n      return alert(\"Old and New Password must match\");\n    }\n  }\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      const { loading } = this.state;\n      return (\n        <>\n          <div className=\"contentent\">\n            <div className=\"personal-info\">\n              <h5\n                className=\"headline\"\n                style={{\n                  fontFamily: \"Roboto, sans-serif\",\n\n                  fontSize: \"16px\",\n                }}\n              >\n                Personal Information:\n                <hr\n                  style={{\n                    width: \"8em\",\n                    height: \"0.3em\",\n                    borderRadius: \"1em\",\n                    backgroundColor: \"#800000\",\n                    marginTop: \"0em\",\n                  }}\n                />\n              </h5>\n              <Form onSubmit={this.handleform}>\n                <Form.Row>\n                  <Form.Group as={Col} controlId=\"formGridCity\">\n                    <Form.Label>Full Name</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      type=\"text\"\n                      placeholder={UserStore.name}\n                      value={this.state.name ? this.state.name : \"\"}\n                      onChange={(e) =>\n                        this.setInputValue(\"name\", e.target.value)\n                      }\n                    />\n                  </Form.Group>\n                  <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>To</Form.Label>\n                    <Form.Control\n                      className=\"form-input\"\n                      name=\"tostate\"\n                      value={\n                        this.state.rstate ? this.state.rstate : UserStore.state\n                      }\n                      onChange={(e) =>\n                        this.setInputValue(\"rstate\", e.target.value)\n                      }\n                      as=\"select\"\n                      required\n                    >\n                      <option>{UserStore.state}</option>\n                      <option>Abuja</option>\n                    </Form.Control>\n                  </Form.Group>\n                </Form.Row>\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                  <Form.Label>Residential Address</Form.Label>\n                  <Form.Control\n                    className=\"form-input-text\"\n                    as=\"textarea\"\n                    rows=\"3\"\n                    placeholder={UserStore.address}\n                    value={this.state.address ? this.state.address : \"\"}\n                    onChange={(e) =>\n                      this.setInputValue(\"address\", e.target.value)\n                    }\n                  />\n                </Form.Group>\n                <Button\n                  onClick={() => this.UpdatePersonal()}\n                  className=\"button_login_back\"\n                  variant=\"primary\"\n                  type=\"submit\"\n                  disabled={loading}\n                >\n                  {loading && (\n                    <FontAwesomeIcon\n                      onClick={this.continue}\n                      icon={faSpinner}\n                      spin\n                    />\n                  )}\n                  {loading && <span> Saving Data</span>}\n\n                  {!loading && <span>Save Changes</span>}\n                </Button>\n              </Form>\n            </div>\n          </div>\n        </>\n      );\n    } else if (this.state.activeTab === 1) {\n      const { loader } = this.state;\n      return (\n        <>\n          <div className=\"contentent\">\n            <div className=\"personal-info\">\n              <h5\n                className=\"headline\"\n                style={{\n                  fontFamily: \"Roboto, sans-serif\",\n\n                  fontSize: \"16px\",\n                }}\n              >\n                Change Password:\n                <hr\n                  style={{\n                    width: \"8em\",\n                    height: \"0.3em\",\n                    borderRadius: \"1em\",\n                    backgroundColor: \"#800000\",\n                    marginTop: \"0em\",\n                  }}\n                />\n              </h5>\n              <Form.Row>\n                <Form.Group\n                  controlId=\"formGridCity\"\n                  style={{ marginLeft: \"0.5em\" }}\n                >\n                  <Form.Label>Cur. Password</Form.Label>\n                  <Form.Control\n                    className=\"form-input\"\n                    type=\"password\"\n                    value={this.state.oldpassword ? this.state.oldpassword : \"\"}\n                    onChange={(e) =>\n                      this.setInputValue(\"oldpassword\", e.target.value)\n                    }\n                    placeholder=\"Current Password\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Form.Row>\n                <Form.Group\n                  controlId=\"formGridCity\"\n                  style={{ marginLeft: \"0.5em\" }}\n                >\n                  <Form.Label>New. Password</Form.Label>\n                  <Form.Control\n                    className=\"form-input\"\n                    type=\"password\"\n                    value={this.state.newpassword ? this.state.newpassword : \"\"}\n                    onChange={(e) =>\n                      this.setInputValue(\"newpassword\", e.target.value)\n                    }\n                    placeholder=\"New Password\"\n                  />\n                </Form.Group>\n              </Form.Row>\n              <Form.Row>\n                <Form.Group\n                  controlId=\"formGridZip\"\n                  style={{ marginLeft: \"0.5em\" }}\n                >\n                  <Form.Label>Con. Password</Form.Label>\n                  <Form.Control\n                    className=\"form-input\"\n                    value={this.state.cpassword ? this.state.cpassword : \"\"}\n                    onChange={(e) =>\n                      this.setInputValue(\"cpassword\", e.target.value)\n                    }\n                    type=\"password\"\n                    placeholder=\"Confirm New Password\"\n                  />\n                </Form.Group>\n              </Form.Row>\n\n              <Button\n                className=\"button_login_back\"\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={loader}\n                onClick={() => this.UpdatePassword()}\n              >\n                {loader && (\n                  <FontAwesomeIcon\n                    onClick={this.continue}\n                    icon={faSpinner}\n                    spin\n                  />\n                )}\n                {loader && <span> Changing Data</span>}\n\n                {!loader && <span>Change Password</span>}\n              </Button>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n  render() {\n    if (UserStore.isLoggedIn) {\n      const { selectedItem } = this.state;\n      return (\n        <>\n          <div className=\"dashboard\">\n            <Row className={css(styles.container)}>\n              <SidebarComponent\n                selectedItem={selectedItem}\n                onChange={(selectedItem) => this.setState({ selectedItem })}\n              />\n              <Column flexGrow={1} className={css(styles.mainBlock)}>\n                <HeaderComponent title={selectedItem} />\n                <div className={css(styles.content)}>\n                  <div\n                    style={{\n                      backgroundColor: \"#fff\",\n                      padding: \"2em\",\n                      borderRadius: \"0.5em\",\n                    }}\n                  >\n                    <div className=\"demo-tabs\">\n                      <Tabs\n                        activeTab={this.state.activeTab}\n                        onChange={(tabId) =>\n                          this.setState({ activeTab: tabId })\n                        }\n                        ripple\n                      >\n                        <Tab>Personal Info</Tab>\n                        <Tab>Change Password</Tab>\n                      </Tabs>\n                      <section>{this.toggleCategories()}</section>\n                    </div>\n                  </div>\n                </div>\n              </Column>\n            </Row>\n          </div>\n        </>\n      );\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\nexport default Settings;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport UserStore from \"../../../UserStore\";\nimport { faMoneyBillWave } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\n\nclass Subscription extends Component {\n  state = { selectedItem: \"Subscription\" };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  render() {\n    const { selectedItem } = this.state;\n    return (\n      <>\n        <div className=\"dashboard\">\n          <Row className={css(styles.container)}>\n            <SidebarComponent\n              selectedItem={selectedItem}\n              onChange={(selectedItem) => this.setState({ selectedItem })}\n            />\n            <Column flexGrow={1} className={css(styles.mainBlock)}>\n              <HeaderComponent title={selectedItem} />\n              <div className={css(styles.content)}>\n                <div\n                  className=\"mobil\"\n                  style={{\n                    backgroundColor: \"#fff\",\n                    padding: \"2em\",\n                    borderRadius: \"0.5em\",\n                    width: \"100%\",\n                  }}\n                >\n                  <p style={{ textAlign: \"center\" }}>\n                    <i>\n                      Please choose a plan you want to subscribe for;\n                      <br />\n                    </i>\n                  </p>\n                  <div className=\"cards\">\n                    <div class=\"radio-item\">\n                      <input type=\"radio\" id=\"economy\" name=\"subscription\" />\n\n                      <label for=\"economy\">\n                        Economy Plan\n                        <br />\n                        N 5,000\n                        <br />\n                        <FontAwesomeIcon\n                          icon={faMoneyBillWave}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <br />\n                        <p\n                          style={{\n                            fontSize: \"12px\",\n                            fontFamily: \"Roboto, sans-serif\",\n                          }}\n                        >\n                          Monthly Subscription for small enterprises\n                        </p>\n                        <div class=\"check\"></div>\n                      </label>\n                    </div>\n                  </div>\n\n                  <div className=\"cards\">\n                    <div class=\"radio-item\">\n                      <input type=\"radio\" id=\"basic\" name=\"subscription\" />\n\n                      <label for=\"basic\">\n                        Basic Plan\n                        <br />\n                        N 10,000\n                        <br />\n                        <FontAwesomeIcon\n                          icon={faMoneyBillWave}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <br />\n                        <p\n                          style={{\n                            fontSize: \"12px\",\n                            fontFamily: \"Roboto, sans-serif\",\n                          }}\n                        >\n                          Monthly Subscription for medium enterprises\n                        </p>\n                        <div class=\"check\"></div>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"cards\">\n                    <div class=\"radio-item\">\n                      <input type=\"radio\" id=\"deluxe\" name=\"subscription\" />\n\n                      <label for=\"deluxe\">\n                        Deluxe Plan\n                        <br />\n                        N 15,000\n                        <br />\n                        <FontAwesomeIcon\n                          icon={faMoneyBillWave}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <br />\n                        <p\n                          style={{\n                            fontSize: \"12px\",\n                            fontFamily: \"Roboto, sans-serif\",\n                          }}\n                        >\n                          Monthly Subscription for super medium enterprises\n                        </p>\n                        <div class=\"check\"></div>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"cards\">\n                    <div class=\"radio-item\">\n                      <input type=\"radio\" id=\"advance\" name=\"subscription\" />\n\n                      <label for=\"advance\">\n                        Advance Plan\n                        <br />\n                        N 20,000\n                        <br />\n                        <FontAwesomeIcon\n                          icon={faMoneyBillWave}\n                          style={{\n                            display: \"inline-block\",\n                            color: \"#800000\",\n                            fontSize: \"30px\",\n                          }}\n                        />\n                        <br />\n                        <p\n                          style={{\n                            fontSize: \"12px\",\n                            fontFamily: \"Roboto, sans-serif\",\n                          }}\n                        >\n                          Monthly Subscription for large enterprises\n                        </p>\n                        <div class=\"check\"></div>\n                      </label>\n                    </div>\n                  </div>\n                  <div className=\"\" style={{ textAlign: \"center\" }}>\n                    <Button\n                      className=\"button_login_back\"\n                      variant=\"primary\"\n                      type=\"submit\"\n                    >\n                      Subscribe\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </Column>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Subscription;\n","import React, { Component } from \"react\";\nimport { Column, Row } from \"simple-flexbox\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Redirect } from \"react-router-dom\";\nimport UserStore from \"../../UserStore\";\nimport SidebarComponent from \"./sidebar/SidebarComponent\";\nimport HeaderComponent from \"./header/HeaderComponent\";\nimport ContentComponent from \"./content/ContentComponent\";\nimport PrepareShipment from \"./content/PrepareShipment\";\nimport ScheduleShipment from \"./content/ScheduleShipment\";\nimport MyShipments from \"./content/myshipments\";\nimport Settings from \"./content/settings\";\nimport Subscription from \"./content/Subscription\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\n\nclass Dashboard extends Component {\n  async componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n  state = { selectedItem: \"Overview\" };\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  render() {\n    if (UserStore.isLoggedIn) {\n      const { selectedItem } = this.state;\n      if (selectedItem === \"Overview\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <ContentComponent />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      } else if (selectedItem === \"Shipment\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <PrepareShipment />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      } else if (selectedItem === \"Pickup\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <ScheduleShipment />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      } else if (selectedItem === \"Myshipments\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <MyShipments />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      } else if (selectedItem === \"Settings\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <Settings />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      } else if (selectedItem === \"Subscription\") {\n        return (\n          <>\n            <div className=\"dashboard\">\n              <Row className={css(styles.container)}>\n                <SidebarComponent\n                  selectedItem={selectedItem}\n                  onChange={(selectedItem) => this.setState({ selectedItem })}\n                />\n                <Column flexGrow={1} className={css(styles.mainBlock)}>\n                  <HeaderComponent title={selectedItem} />\n                  <div className={css(styles.content)}>\n                    <Subscription />\n                  </div>\n                </Column>\n              </Row>\n            </div>\n          </>\n        );\n      }\n    } else {\n      return <Redirect to=\"/login\" />;\n    }\n  }\n}\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport UserStore from \"../UserStore\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport logobox1 from \"../images/box11.png\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Dashboard from \"./dashboard/dashboard\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n      loading: false,\n    };\n  }\n\n  setInputValue(property, e) {\n    e = e.trim();\n    if (e.length > 200) {\n      return;\n    }\n    this.setState({\n      [property]: e,\n    });\n  }\n  resetForm() {\n    this.setState({\n      username: \"\",\n      password: \"\",\n      buttonDisabled: false,\n    });\n  }\n  handleLogin(e) {\n    e.preventDefault();\n  }\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.password) {\n      return;\n    }\n    this.setState({\n      buttonDisabled: true,\n    });\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({ loading: true });\n    }, 3000);\n    try {\n      let res = await fetch(\"/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password,\n        }),\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = true;\n        UserStore.sessionID = result.sessionID;\n        UserStore.username = result.username;\n        UserStore.name = result.name;\n        UserStore.state = result.state;\n        UserStore.address = result.address;\n      } else if (result && result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n      }\n    } catch (e) {\n      console.log(e);\n      this.resetForm();\n    }\n  }\n  render() {\n    if (UserStore.isLoggedIn === true) {\n      return <Dashboard />;\n    } else if (UserStore.isLoggedIn === false) {\n      const { loading } = this.state;\n      return (\n        <>\n          <div className=\"remove-grid\">\n            <Container>\n              <Row>\n                <Col sm={8}>\n                  <div className=\"logb\"></div>\n                </Col>\n                <Col sm={4}>\n                  <div className=\"log-white\">\n                    <div\n                      style={{\n                        position: \"relative\",\n                        textAlign: \"center\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        float: \"center\",\n                      }}\n                    >\n                      <Link className=\"link\" to=\"/\">\n                        <img\n                          className=\"logo\"\n                          src={logobox1}\n                          alt=\"logo\"\n                          style={{\n                            marginLeft: \"0\",\n                            left: \"0\",\n                            textAlign: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        />\n                      </Link>\n                    </div>\n\n                    <h5\n                      style={{\n                        fontSize: \"1.625rem\",\n                        lineHeight: \" 2.25rem\",\n                        fontWeight: \"700\",\n                        textAlign: \"center\",\n                        fontFamily: \"Roboto, sans-serif\",\n                      }}\n                    >\n                      Sign in to Box1\n                    </h5>\n                    <p\n                      style={{\n                        fontSize: \"1.1rem\",\n\n                        fontFamily: \"Nunito, sans-serif\",\n                      }}\n                    >\n                      Welcome Back\n                    </p>\n                    <Form onSubmit={this.handleLogin}>\n                      <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Phone Number</Form.Label>\n                        <Form.Control\n                          value={this.state.username ? this.state.username : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\"username\", e.target.value)\n                          }\n                          type=\"tel\"\n                          id=\"phone\"\n                          pattern=\"[0-9]{11}\"\n                          placeholder=\"0813 666 8344\"\n                          className=\"form-input\"\n                          required\n                        />\n                        <Form.Text className=\"text-muted\">\n                          We'll never share your phone no with anyone else.\n                        </Form.Text>\n                      </Form.Group>\n\n                      <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>{\" \"}\n                        <span\n                          style={{\n                            position: \"relative\",\n                            textAlign: \"right\",\n                            float: \"right\",\n\n                            color: \"#800000\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          <Link\n                            style={{\n                              position: \"relative\",\n\n                              color: \"#800000\",\n                              cursor: \"pointer\",\n                            }}\n                          >\n                            Forgot Password?\n                          </Link>\n                        </span>\n                        <Form.Control\n                          value={this.state.password ? this.state.password : \"\"}\n                          onChange={(e) =>\n                            this.setInputValue(\"password\", e.target.value)\n                          }\n                          type=\"password\"\n                          className=\"form-input\"\n                          placeholder=\"Password\"\n                          required\n                        />\n                      </Form.Group>\n                      <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Stay Logged in\" />\n                      </Form.Group>\n                      <Button\n                        disabled={this.state.buttonDisabled + loading}\n                        onClick={() => this.doLogin()}\n                        variant=\"primary\"\n                        type=\"submit\"\n                      >\n                        {loading && (\n                          <FontAwesomeIcon\n                            onClick={this.continue}\n                            icon={faSpinner}\n                            spin\n                          />\n                        )}\n                        {loading && <span> Logging in</span>}\n\n                        {!loading && <span>Log in</span>}\n                      </Button>\n                      <br />\n\n                      <br />\n\n                      <p\n                        style={{\n                          fontSize: \"1.1rem\",\n                          fontFamily: \"Nunito, sans-serif\",\n                        }}\n                      >\n                        {\" \"}\n                        Don`t have an account yet?{\" \"}\n                        <Link\n                          className=\"link\"\n                          to=\"/signup\"\n                          style={{\n                            position: \"relative\",\n\n                            color: \"#800000\",\n                            fontWeight: \"600\",\n                            cursor: \"pointer\",\n                          }}\n                        >\n                          Create an Account\n                        </Link>\n                      </p>\n                    </Form>\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n        </>\n      );\n    }\n  }\n}\nexport default Login;\n","import React, { Component } from \"react\";\nimport UserStore from \"../UserStore\";\nimport { Form, Button, Container, Row } from \"react-bootstrap\";\nimport logobox1 from \"../images/box11.png\";\nimport { Link } from \"react-router-dom\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: null,\n      name: null,\n      rstate: null,\n      address: null,\n      password: null,\n      cpassword: null,\n      verify: null,\n      otp: null,\n      loading: false,\n      loader: false,\n      step: \"\",\n      formErrors: {\n        username: \"\",\n        name: \"\",\n        rstate: \"\",\n        address: \"\",\n        password: \"\",\n        cpassword: \"\",\n        verify: \"\",\n      },\n    };\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n  }\n  handleVerify(e) {\n    e.preventDefault();\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = this.state.formErrors;\n\n    switch (name) {\n      case \"username\":\n        formErrors.username =\n          value.length !== 11 && value.length > 0\n            ? \"Numbers only Minimum of 11\"\n            : \"\";\n        break;\n      case \"name\":\n        formErrors.name =\n          value.length < 4 && value.length > 0\n            ? \"Please enter a valid name\"\n            : \"\";\n        break;\n      case \"rstate\":\n        formErrors.rstate =\n          value.length < 4 && value.length > 0\n            ? \"Minimum 4 characters Required\"\n            : \"\";\n        break;\n      case \"address\":\n        formErrors.address =\n          value.length < 3 && value.length > 0\n            ? \"Please enter a valid address e.g No 20 Danube Street, Ibrahim Babangida, Maitama Abuja\"\n            : \"\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 8 && value.length > 0\n            ? \"Minimum 8 characters Required\"\n            : \"\";\n        break;\n      case \"cpassword\":\n        formErrors.cpassword =\n          value === this.state.password\n            ? \"\"\n            : \"Password and Confirm Password must match\";\n        break;\n      case \"verify\":\n        formErrors.verify =\n          value === this.state.otp ? \"Minimum 6 characters Required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => console.log(this.state));\n  };\n  async verifyAccount() {\n    if (String(this.state.otp) === this.state.verify) {\n      try {\n        this.setState({ loader: true });\n        setTimeout(() => {\n          this.setState({ loader: true });\n        }, 3000);\n        let res = await fetch(\"/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            name: this.state.name,\n            state: this.state.rstate,\n            address: this.state.address,\n            password: this.state.password,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          this.setState({\n            step: \"verified\",\n          });\n          return;\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n      this.setState({\n        step: \"verified\",\n      });\n    } else {\n      alert(\"invalid otp\");\n    }\n  }\n  async createAccount() {\n    if (\n      this.state.formErrors.username === \"\" &&\n      this.state.formErrors.name === \"\" &&\n      this.state.formErrors.rstate === \"\" &&\n      this.state.formErrors.address === \"\" &&\n      this.state.formErrors.password === \"\" &&\n      this.state.cpassword !== \"\" &&\n      this.state.username !== null &&\n      this.state.name !== null &&\n      this.state.rstate !== null &&\n      this.state.address !== null &&\n      this.state.password !== null &&\n      this.state.cpassword === this.state.password\n    ) {\n      try {\n        this.setState({ loading: true });\n        setTimeout(() => {\n          this.setState({ loading: true });\n        }, 3000);\n        this.state.otp = Math.floor(100000 + Math.random() * 900000);\n        let res = await fetch(\"/sendmessage\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username: this.state.username,\n            otp: this.state.otp,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          this.setState({\n            step: \"process\",\n          });\n        } else if (result && result.success === false) {\n          alert(result.msg);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      alert(\"Please Fill out your form Correctly\");\n    }\n  }\n\n  toggleContent() {\n    switch (this.state.step) {\n      case \"\":\n        const { formErrors } = this.state;\n        const { loading } = this.state;\n        return (\n          <>\n            <h5\n              style={{\n                fontSize: \"1.625rem\",\n                lineHeight: \" 2.25rem\",\n                fontWeight: \"700\",\n                textAlign: \"left\",\n                fontFamily: \"Roboto, sans-serif\",\n              }}\n            >\n              Let's get you started with your Box1 account\n            </h5>\n\n            <Form onSubmit={this.handleSubmit}>\n              <p style={{ position: \"relative\", textAlign: \"center\" }}></p>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label ClassName=\"Label-Form-Input\">\n                  Phone Number\n                </Form.Label>\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"username\"\n                  onChange={this.handleChange}\n                  type=\"tel\"\n                  id=\"phone\"\n                  pattern=\"[0-9]{11}\"\n                  placeholder=\"0813 666 8344\"\n                  required\n                />\n                {formErrors.username.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.username}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"name\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"Hussaini Bulama\"\n                  required\n                />\n                {formErrors.name.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.name}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                <Form.Label>State of Residence</Form.Label>\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"rstate\"\n                  onChange={this.handleChange}\n                  as=\"select\"\n                  required\n                >\n                  <option></option>\n                  <option>Abuja</option>\n                </Form.Control>\n                {formErrors.rstate.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.rstate}</span>\n                )}\n              </Form.Group>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Label>Residential Address</Form.Label>\n                <Form.Control\n                  className=\"form-input-text\"\n                  name=\"address\"\n                  onChange={this.handleChange}\n                  as=\"textarea\"\n                  rows=\"3\"\n                  required\n                />\n                {formErrors.address.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.address}</span>\n                )}\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Choose a Password</Form.Label>{\" \"}\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"password\"\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n                {formErrors.password.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.password}</span>\n                )}\n              </Form.Group>\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Confirm Password</Form.Label>{\" \"}\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"cpassword\"\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n                {formErrors.cpassword.length > 0 && (\n                  <span className=\"errorMessage\">{formErrors.cpassword}</span>\n                )}\n              </Form.Group>\n              <Button\n                onClick={() => this.createAccount()}\n                disabled={loading}\n                variant=\"primary\"\n                type=\"submit\"\n                style={{ width: \"100%\", padding: \"0.8em\" }}\n              >\n                {loading && (\n                  <FontAwesomeIcon\n                    onClick={this.continue}\n                    icon={faSpinner}\n                    spin\n                  />\n                )}\n                {loading && <span> Sending OTP</span>}\n\n                {!loading && <span>Create an Account</span>}\n              </Button>\n              <br />\n\n              <br />\n\n              <p\n                style={{\n                  fontSize: \"1.1rem\",\n                  fontFamily: \"Nunito, sans-serif\",\n                }}\n              >\n                {\" \"}\n                Already have an Account{\" \"}\n                <Link\n                  className=\"link\"\n                  to=\"/login\"\n                  style={{\n                    position: \"relative\",\n\n                    color: \"#800000\",\n                    fontWeight: \"600\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  Login\n                </Link>\n              </p>\n            </Form>\n          </>\n        );\n        break;\n      case \"process\":\n        const { loader } = this.state;\n        return (\n          <>\n            <Form onSubmit={this.handleVerify}>\n              <h5\n                style={{\n                  fontSize: \"1.625rem\",\n                  lineHeight: \" 2.25rem\",\n                  fontWeight: \"700\",\n                  textAlign: \"left\",\n                  fontFamily: \"Roboto, sans-serif\",\n                }}\n              >\n                Please enter the OTP sent to you\n              </h5>\n              {this.state.code}\n              <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Verify your number</Form.Label>{\" \"}\n                <Form.Control\n                  className=\"form-input\"\n                  name=\"verify\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  placeholder=\"verify\"\n                  required\n                />\n              </Form.Group>\n\n              <Button\n                onClick={() => this.verifyAccount()}\n                variant=\"primary\"\n                type=\"submit\"\n                disabled={loader}\n                style={{ width: \"100%\", padding: \"0.8em\" }}\n              >\n                {loader && (\n                  <FontAwesomeIcon\n                    onClick={this.continue}\n                    icon={faSpinner}\n                    spin\n                  />\n                )}\n                {loader && <span> Verifying OTP sent</span>}\n\n                {!loader && <span>Verify</span>}\n              </Button>\n            </Form>\n          </>\n        );\n        break;\n      case \"verified\":\n        return (\n          <>\n            <div\n              style={{\n                backgroundColor: \"#fff\",\n                padding: \"2em\",\n                borderRadius: \"2em\",\n              }}\n            >\n              <h3 style={{ fontSize: \"17px\", textAlign: \"justify\" }}>\n                Congratulations, your account has been created successfully, you\n                may proceed to login now. <Link to=\"/login\">Login now</Link>\n              </h3>\n            </div>\n          </>\n        );\n        break;\n      default:\n        break;\n    }\n  }\n  render() {\n    return (\n      <>\n        <div className=\"remove-grid\">\n          <Container>\n            <Row>\n              <div className=\"signup-form\">\n                <div\n                  style={{\n                    position: \"relative\",\n\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Link className=\"link\" to=\"/\">\n                    <div style={{ float: \"center\", textAlign: \"center\" }}>\n                      <img\n                        className=\"logo\"\n                        src={logobox1}\n                        alt=\"logo\"\n                        style={{\n                          marginLeft: \"0\",\n                          left: \"0\",\n                          textAlign: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      />\n                    </div>\n                  </Link>\n                  <br />\n                  <br />\n                  <>{this.toggleContent()}</>\n                </div>\n              </div>\n            </Row>\n          </Container>\n        </div>\n      </>\n    );\n  }\n}\nexport default Signup;\n","import Payment from \"payment\";\n\nfunction clearNumber(value = \"\") {\n  return value.replace(/\\D+/g, \"\");\n}\n\nexport function formatCreditCardNumber(value) {\n  if (!value) {\n    return value;\n  }\n\n  const issuer = Payment.fns.cardType(value);\n  const clearValue = clearNumber(value);\n  let nextValue;\n\n  switch (issuer) {\n    case \"amex\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 15)}`;\n      break;\n    case \"dinersclub\":\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        10\n      )} ${clearValue.slice(10, 14)}`;\n      break;\n    default:\n      nextValue = `${clearValue.slice(0, 4)} ${clearValue.slice(\n        4,\n        8\n      )} ${clearValue.slice(8, 12)} ${clearValue.slice(12, 19)}`;\n      break;\n  }\n\n  return nextValue.trim();\n}\n\nexport function formatCVC(value, prevValue, allValues = {}) {\n  const clearValue = clearNumber(value);\n  let maxLength = 4;\n\n  if (allValues.number) {\n    const issuer = Payment.fns.cardType(allValues.number);\n    maxLength = issuer === \"amex\" ? 4 : 3;\n  }\n\n  return clearValue.slice(0, maxLength);\n}\n\nexport function formatExpirationDate(value) {\n  const clearValue = clearNumber(value);\n\n  if (clearValue.length >= 3) {\n    return `${clearValue.slice(0, 2)}/${clearValue.slice(2, 4)}`;\n  }\n\n  return clearValue;\n}\n\nexport function formatFormData(data) {\n  return Object.keys(data).map((d) => `${d}: ${data[d]}`);\n}\n","import React, { Component } from \"react\";\nimport { StyleSheet, css } from \"aphrodite\";\nimport { Column, Row } from \"simple-flexbox\";\nimport SidebarComponent from \"../sidebar/SidebarComponent\";\nimport HeaderComponent from \"../header/HeaderComponent\";\nimport Card from \"react-credit-cards\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport {\n  formatCreditCardNumber,\n  formatCVC,\n  formatExpirationDate,\n  formatFormData,\n} from \"./utils\";\n\nimport \"react-credit-cards/es/styles-compiled.css\";\nimport UserStore from \"../../../UserStore\";\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"100%\",\n    width: \"100% !important\",\n    minHeight: \"100vh\",\n    \"@media (max-width: 768px)\": {\n      width: \"100%\",\n    },\n  },\n  content: {\n    marginTop: 54,\n  },\n  mainBlock: {\n    backgroundColor: \"#F7F8FC\",\n    padding: 30,\n  },\n});\nclass CreditCard extends Component {\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.resize);\n  }\n\n  resize = () => this.forceUpdate();\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedItem: \"Card\",\n      number: \"\",\n      name: \"\",\n      expiry: \"\",\n      cvc: \"\",\n      issuer: \"\",\n      focused: \"\",\n      formData: null,\n      loading: false,\n    };\n  }\n\n  handleCallback = ({ issuer }, isValid) => {\n    if (isValid) {\n      this.setState({ issuer });\n    }\n  };\n\n  handleInputFocus = ({ target }) => {\n    this.setState({\n      focused: target.name,\n    });\n  };\n\n  handleInputChange = ({ target }) => {\n    if (target.name === \"number\") {\n      target.value = formatCreditCardNumber(target.value);\n    } else if (target.name === \"expiry\") {\n      target.value = formatExpirationDate(target.value);\n    } else if (target.name === \"cvc\") {\n      target.value = formatCVC(target.value);\n    }\n\n    this.setState({ [target.name]: target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { issuer } = this.state;\n    const formData = [...e.target.elements]\n      .filter((d) => d.name)\n      .reduce((acc, d) => {\n        acc[d.name] = d.value;\n        return acc;\n      }, {});\n\n    this.setState({ formData });\n    this.form.reset();\n  };\n  async CreditCard() {\n    if (\n      this.state.number !== \"\" &&\n      this.state.name !== \"\" &&\n      this.state.expiry !== \"\" &&\n      this.state.cvc !== \"\"\n    ) {\n      this.setState({ loading: true });\n      setTimeout(() => {\n        this.setState({ loading: true });\n      }, 3000);\n      try {\n        let res = await fetch(\"/addcard\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            sessinID: UserStore.sessinID,\n            number: this.state.number,\n            name: this.state.name,\n            expiry: this.state.expiry,\n            cvv: this.state.cvv,\n          }),\n        });\n\n        let result = await res.json();\n        if (result && result.success) {\n          return alert(\"Information Change Successfully\");\n        } else if (result && result.success === false) {\n          alert(\"An error occur, please try later\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      return alert(\"Please fill out your form correctly\");\n    }\n  }\n\n  render() {\n    const { loading } = this.state;\n    const { selectedItem } = this.state;\n    const { name, number, expiry, cvc, focused, issuer, formData } = this.state;\n    return (\n      <>\n        <div className=\"dashboard\">\n          <Row className={css(styles.container)}>\n            <SidebarComponent\n              selectedItem={selectedItem}\n              onChange={(selectedItem) => this.setState({ selectedItem })}\n            />\n            <Column flexGrow={1} className={css(styles.mainBlock)}>\n              <HeaderComponent title={selectedItem} />\n              <div className={css(styles.content)}>\n                <div\n                  style={{\n                    backgroundColor: \"#fff\",\n                    padding: \"2em\",\n                    borderRadius: \"0.5em\",\n                  }}\n                >\n                  <div className=\"demo-tabs\">\n                    <div\n                      className=\"contentent\"\n                      style={{ width: \"100% !important\" }}\n                    >\n                      <div key=\"Payment\">\n                        <div className=\"App-payment\">\n                          <Card\n                            number={number}\n                            name={name}\n                            expiry={expiry}\n                            cvc={cvc}\n                            focused={focused}\n                            callback={this.handleCallback}\n                          />\n                          <br />\n                          <form\n                            ref={(c) => (this.form = c)}\n                            onSubmit={this.handleSubmit}\n                          >\n                            <div className=\"form-group\">\n                              <input\n                                type=\"tel\"\n                                name=\"number\"\n                                className=\"form-control form-input\"\n                                placeholder=\"Card Number\"\n                                pattern=\"[\\d| ]{16,22}\"\n                                required\n                                onChange={this.handleInputChange}\n                                onFocus={this.handleInputFocus}\n                              />\n                              <small>E.g.: 49..., 51..., 36..., 37...</small>\n                            </div>\n                            <div className=\"form-group\">\n                              <input\n                                type=\"text\"\n                                name=\"name\"\n                                className=\"form-control form-input\"\n                                placeholder=\"Name\"\n                                required\n                                onChange={this.handleInputChange}\n                                onFocus={this.handleInputFocus}\n                              />\n                            </div>\n                            <div className=\"row\">\n                              <div className=\"col-6\">\n                                <input\n                                  type=\"tel\"\n                                  name=\"expiry\"\n                                  className=\"form-control form-input\"\n                                  placeholder=\"Valid Thru\"\n                                  pattern=\"\\d\\d/\\d\\d\"\n                                  required\n                                  onChange={this.handleInputChange}\n                                  onFocus={this.handleInputFocus}\n                                />\n                              </div>\n                              <div className=\"col-6\">\n                                <input\n                                  type=\"tel\"\n                                  name=\"cvc\"\n                                  className=\"form-control form-input\"\n                                  placeholder=\"CVC\"\n                                  pattern=\"\\d{3,4}\"\n                                  required\n                                  onChange={this.handleInputChange}\n                                  onFocus={this.handleInputFocus}\n                                />\n                              </div>\n                            </div>\n                            <input type=\"hidden\" name=\"issuer\" value={issuer} />\n                            <div className=\"form-actions\">\n                              <button\n                                className=\"btn btn-primary btn-block\"\n                                onClick={() => this.CreditCard()}\n                                disabled={loading}\n                              >\n                                {loading && (\n                                  <FontAwesomeIcon\n                                    onClick={this.continue}\n                                    icon={faSpinner}\n                                    spin\n                                  />\n                                )}\n                                {loading && <span> Saving</span>}\n\n                                {!loading && <span>Save</span>}\n                              </button>\n                            </div>\n                          </form>\n                          {formData && (\n                            <div className=\"App-highlight\">\n                              {formatFormData(formData).map((d, i) => (\n                                <div key={i}>{d}</div>\n                              ))}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </Column>\n          </Row>\n        </div>\n      </>\n    );\n  }\n}\nexport default CreditCard;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Home from \"./home\";\nimport Login from \"./login\";\nimport Signup from \"./signup\";\nimport Dashboard from \"./dashboard/dashboard\";\nimport Subscription from \"./dashboard/content/Subscription\";\nimport PrepareShipment from \"./dashboard/content/PrepareShipment\";\nimport ScheduleShipment from \"./dashboard/content/ScheduleShipment\";\nimport Settings from \"./dashboard/content/settings\";\nimport MyShipments from \"./dashboard/content/myshipments\";\nimport CreditCard from \"./dashboard/content/CreditCard\";\n\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/signup\" component={Signup} />\n    <Route exact path=\"/dashboard\" component={Dashboard} />\n    <Route exact path=\"/dashboard/subscription\" component={Subscription} />\n    <Route exact path=\"/dashboard/settings\" component={Settings} />\n    <Route exact path=\"/dashboard/myshipments\" component={MyShipments} />\n    <Route exact path=\"/dashboard/creditcard\" component={CreditCard} />\n\n    <Route\n      exact\n      path=\"/dashboard/prepareshipment\"\n      component={PrepareShipment}\n    />\n    <Route\n      exact\n      path=\"/dashboard/scheduleshipment\"\n      component={ScheduleShipment}\n    />\n  </Switch>\n);\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport UserStore from \"./UserStore\";\nimport { observer } from \"mobx-react\";\nimport Main from \"./components/main\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  async componentDidMount() {\n    try {\n      let res = await fetch(\"/isLoggedIn\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      } else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n    } catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n  async doLogout() {\n    try {\n      let res = await fetch(\"/logout\", {\n        method: \"post\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      let result = await res.json();\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.username = \"\";\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  render() {\n    return (\n      <>\n        <div className=\"App version=1.0\">\n          <div className=\"Wrapper\">\n            <Main />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"react-mdl/extra/material.css\";\nimport \"react-mdl/extra/material.js\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/box11.7a2a216b.png\";","module.exports = __webpack_public_path__ + \"static/media/doc.80a488b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/parcel.3ed03550.svg\";","module.exports = __webpack_public_path__ + \"static/media/interregion.a1ff10f5.jpeg\";"],"sourceRoot":""}